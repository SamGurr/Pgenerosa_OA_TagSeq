#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
alpha_FDR_plot = 0.05
GENES = c('MAL','PLP1')
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
f
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
dplot
filename = 'genewalk_results.csv'
alpha_FDR_plot = 0.05
GENES = c('MAL','PLP1')
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
fname
path
fname
ggsave(paste(path,d14_barplot_genewalk,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,d14_barplot_genewalk,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,d14_barplot_genewalk,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,d14_barplot_genewalk,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
d14.upreg_GW
d14.upreg_GW$mlog10padj_err
d14.upreg_GW$mlog10padj
d14.upreg_GW <- read.csv(paste(path,"d14_output/genewalk_results.csv",sep=""),header = TRUE)
d14.upreg_GW$mlog10padj = -log10(d14.upreg_GW$gene_padj) #calculate -log10 values
d14.upreg_GW$mlog10padj_err = -log10(d14.upreg_GW$cilow_gene_padj) - d14.upreg_GW$mlog10padj #calculate -log10 error bars
alpha_FDR_plot = 0.05
GENES = c('MAL','PLP1')
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,d14_barplot_genewalk,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,d14_barplot_genewalk,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
dplot$mlog10padj
dplot
d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
d14.upreg_GW$hgnc_symbol
GENES = c('C1QL4','RGN','HELZ2')
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,d14_barplot_genewalk,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,d14_barplot_genewalk,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
GENES = c('C1QL4','RGN','HELZ2','NPC2')
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
unique(d14.upreg_GW$hgnc_symbol)
list(unique(d14.upreg_GW$hgnc_symbol))
GENES = list(unique(d14.upreg_GW$hgnc_symbol))
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
unique(d14.upreg_GW$hgnc_symbol)
GENES = unique(d14.upreg_GW$hgnc_symbol)
GENES
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
GENES = unique(d14.upreg_GW$go_domain)
GENES
for (gene in GENES){
dplot = d14.upreg_GW[which(d14.upreg_GW$hgnc_symbol==gene),]
#for plotting: order GO terms according to gene_padj (and if equal then sort by cosine similarity)
dplot$go_name = factor(dplot$go_name,
levels = dplot$go_name[with(dplot,order(-gene_padj,sim))])
font_sz=12
ymax=max(dplot$mlog10padj + dplot$mlog10padj_err) + 0.3
f = ggplot(dplot, aes(go_name,mlog10padj)) +
theme_light(base_size=font_sz) +
geom_bar(stat='identity',fill='royalblue',width=0.8) +
geom_errorbar(aes(ymin=mlog10padj-mlog10padj_err, ymax=mlog10padj+mlog10padj_err),
width=0.2, color='grey') +
geom_hline(yintercept=-log10(alpha_FDR_plot), color='red', linetype='dashed') +
xlab('') +
ylab('-log10(gene p-adjust)') +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(size=font_sz*0.8)) +
scale_y_continuous(breaks=c(0,1,2,3,4),
limits = c(0, ymax)) +
coord_flip()+
ggtitle(gene)
#f
gonames = as.character(dplot$go_name)
lchar = sapply(gonames, nchar)
w0 = max(lchar)
fname = paste('barplot_',gene,'_x_mlog10gene_padj_y_GO.',sep="")
ggsave(paste(path,fname,'pdf',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))#units:inch
ggsave(paste(path,fname,'png',sep=""),
f,
width = (ymax*0.3+w0*0.1),
height=(0.2+0.25*length(dplot$go_name)))
}
dplot
