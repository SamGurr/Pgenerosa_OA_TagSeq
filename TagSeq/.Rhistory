(all.counts.filtered)[1:5]
tail(names(all.counts.filtered))
tail(names(all.counts.filtered),1)
ncol(tail(names(all.counts.filtered),1))
data[,ncol(all.counts.filtered)]
data[,ncol(all.counts.filtered)]
dim(all.counts.filtered)[1]
dom(all.counts.filtered)
dim(all.counts.filtered)
dim(all.counts.filtered)[1]
dim(all.counts.filtered)[1]
rowSums(all.counts.filtered)[2:(dim(all.counts.filtered)[2])]
(dim(all.counts.filtered)[2])
rowSums(all.counts.filtered)[2:3]
colSums(all.counts.filtered)[2:(dim(all.counts.filtered)[2])]
all.counts.filtered
colSums(all.counts.filtered)[2]
colSums(all.counts.filtered)[2]
colSums(all.counts.filtered)[2,]
colSums(all.counts.filtered)[,2]
(all.counts.filtered)[,2]
colSums(all.counts.filtered)[,c(2:3)]
(all.counts.filtered)[,c(2:3)]
sum(all.counts.filtered)[,c(2:3)]
day0.counts.filtered
cts.matrix.d21.filtered
cts.matrix.d21.filtered
cts.matrix.d21.filtered
cts.matrix.d21.filtered
colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])]
mean(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])])
min(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])])
names( min(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])]))
max(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])])
(dim(cts.matrix.d21.filtered)[2])
dim(cts.matrix.d21.filtered)
cts.matrix.d0.filtered
cts.matrix.d14.filtered
cts.matrix.d7.filtered
# ==========================================================
#
# SUMMARY TABLE
# ==========================================================
all.count.data <- data.frame(data = c("cts.matrix.all.filtered",
"cts.matrix.d0.filtered",
"cts.matrix.d7.filtered",
"cts.matrix.d14.filtered",
"cts.matrix.d21.filtered"))
df <- data.frame(matrix(nrow = 1, ncol = 7)) # create a new data table
colnames(df)<-c('Num.genes', 'Num.samples', 'DEGs', 'num.upreg', 'num.downreg', 'perc.upreg','perc.downreg')
dim(cts.matrix.d21.filtered)
substr(all.count.data[1,], 12, 14)
paste((substr(all.count.data[1,], 12, 14)), "timepoints", sep = "_")
df$Average.reads <-mean(colSums(all.count.data[1,])[1:(dim(all.count.data[1,])[2])])
mean(colSums(all.count.data[1,])[1:(dim(all.count.data[1,])[2])])
all.count.data[1,]
colSums(all.count.data[1,])
mean(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])])
mean(colSums(all.count.data[1,])[1:(dim(all.count.data[1,])[2])])
mean(colSums((all.count.data[1,]))[1:(dim((all.count.data[1,]))[2])])
mean(colSums(all.count.data[1,])[1:(dim(cts.matrix.d21.filtered)[2])])
mean(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])])
x <- all.count.data[1,]
x
all.count.data[1,]
df$Num.genes <- dim(all.count.data[1,])[1]
df
dim(all.count.data[1,])[1]
# ==========================================================
#
# SUMMARY TABLE
# ==========================================================
all.count.data <- data.frame(data = c("cts.matrix.all.filtered",
"cts.matrix.d0.filtered",
"cts.matrix.d7.filtered",
"cts.matrix.d14.filtered",
"cts.matrix.d21.filtered"))
dim(all.count.data[1,])[1]
dim(all.count.data[1,])[1]
all.count.data[1,]
mean(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])])
min(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])])
max(colSums(cts.matrix.d21.filtered)[1:(dim(cts.matrix.d21.filtered)[2])])
# SET WORKING DIRECTORY AND LOAD DATA
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# LOAD DATA
all.counts_filt <- read.csv(file="outputs/ all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
# LOAD DATA
all.counts_filt <- read.csv(file="outputs/all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
# LOAD DATA
all.counts_filt <- read.csv(file="output/all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
# LOAD DATA
all.counts_filt <- read.csv(file="RAnalysis/DESeq2/output/all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
# LOAD DATA
all.counts_filt <- read.csv(file="RAnalysis/DESeq2/all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
# SET WORKING DIRECTORY AND LOAD DATA
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# LOAD DATA
all.counts_filt <- read.csv(file="RAnalysis/DESeq2/all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
# LOAD DATA
all.counts_filt <- read.csv(file="/RAnalysis/DESeq2/all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
# LOAD DATA
all.counts_filt <- read.csv(file="RAnalysis/DESeq2/all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
# LOAD DATA
all.counts_filt <- read.csv(file="RAnalysis/DESeq2/ all.counts.filtered.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
all.counts_filt
# LOAD DATA
all.counts_filt <- read.csv(file="RAnalysis/DESeq2/ all.counts.filtered.csv", sep=',', header=TRUE)
d0.counts_filt <- read.csv(file="RAnalysis/DESeq2/ day0.counts.filtered.csv", sep=',', header=TRUE)
d7.counts_filt <- read.csv(file="RAnalysis/DESeq2/ day7.counts.filtered.csv", sep=',', header=TRUE)
d14.counts_filt <- read.csv(file="RAnalysis/DESeq2/ day14.counts.filtered.csv", sep=',', header=TRUE)
d21.counts_filt <- read.csv(file="RAnalysis/DESeq2/ day21.counts.filtered.csv", sep=',', header=TRUE)
#======================================================================================================================
#
#                             FORMAT COUNT MATRIX
#
#======================================================================================================================
# path for outputting all .csv filtered count files
path = 'C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/RAnalysis/DESeq2/counts_filtered/' # run this for all count matrix outputs!!!
# LOAD PACKAGES
library(dplyr)
# SET WORKING DIRECTORY AND LOAD DATA
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# LOAD DATA
# raw_counts <- read.csv(file="HPC_Bioinf/outputs/transcript_count_matrix.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: NOT trimmed at 30 phred threshold!
raw_counts <- read.csv(file="HPC_Bioinf/outputs/transcript_count_matrix_trimpolyx_10.csv", sep=',', header=TRUE) # read the output count matrix - NOTE: TRIMMED at 30 phred threshold!
UT_seq_map <- read.csv(file="20201020_Gurr_TagSeq_UTAustin.csv", sep=',', header=TRUE)
smpl_ref <- read.csv(file="Sample_reference.csv", sep=',', header=TRUE)
treatment_ref <- read.csv(file="Extraction_checklist.csv", sep=',', header=TRUE)
# =====================================================================================================================
#
#                             FORMAT EXPERIMENT DESIGN DATAFRAME
# ======================================================================================================================
# MASTER REFERENCE DATA.FRAME
# format and merge to buld master reference dataframe
smpl_ref$Seq_Pos <- paste(smpl_ref$ï..TagSeq_Plate, smpl_ref$TagSeq_Well, sep="_")
smpl_ref <- smpl_ref[,-c(1:2)]
UT_seq_map$Seq_Pos  <- paste(UT_seq_map$ï..Plate, UT_seq_map$Well, sep="_")
UT_seq_map <- UT_seq_map[-c(1:2)]
Seq.Ref <- merge(smpl_ref, UT_seq_map, by = "Seq_Pos")
Mstr.Ref <- merge(Seq.Ref, treatment_ref, by = "Geoduck_ID")
#================= #
# ALL TIMEPOINTS:
# call all experiment design treatments as 'exp.data'
exp.data <- Mstr.Ref[,c("Sample.Name","All_Treatment", "Primary_Treatment", "Second_Treament", "Third_Treatment", "Time")]
#================= #
# DAY 0
exp.data.d0 <- exp.data %>% dplyr::filter(Time %in% 'Day0') # all data on day 0
nrow(exp.data.d0) # 8 total samples on Day 0
#================= #
# DAY 7
exp.data.d7 <- exp.data %>% dplyr::filter(Time %in% 'Day7') # all data on day 7
nrow(exp.data.d7) # 36 total samples on Day 7
#================= #
# DAY 14
UT_seq_map %>% dplyr::filter(Sample.Name == "SG92") # there was no sample in SG92 for TagSeq; 35 total is correct!
exp.data.d14 <- exp.data %>% dplyr::filter(Time %in% 'DAY14') # all data on day 14
exp.data.d14 <- exp.data.d14 %>% dplyr::filter(!(Sample.Name %in% 'SG92')) # RUN THIS! now 35 rows (samples) ommmits SG92 (NOT sent to for TagSeq!)
nrow(exp.data.d14) #  35 total samples on Day 14
#================= #
# DAY 21
exp.data.d21 <- exp.data %>% dplyr::filter(Time %in% 'DAY21') # all data on day 21
nrow(exp.data.d21) # 62 total sampels on day 21
#======================================================================================================================
#
#                             FORMAT COUNT MATRIX
#
#======================================================================================================================
# path for outputting all .csv filtered count files
path = 'C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/RAnalysis/DESeq2/counts_filtered/' # run this for all count matrix outputs!!!
# =======================================================
write.csv(all.counts.filtered, paste(path,"all.counts.filtered.csv"))
write.csv(day0.counts.filtered, paste(path,"day0.counts.filtered.csv")) # 'path' called in previous # write .csv section
write.csv(day7.counts.filtered, paste(path,"day7.counts.filtered.csv"))
write.csv(day14.counts.filtered, paste(path,"day14.counts.filtered.csv"))
write.csv(day14.counts.filtered,paste(path,"day14.counts.filtered.csv"))
write.csv(day7.counts.filtered,paste(path,"day7.counts.filtered.csv"))
write.csv(day0.counts.filtered,paste(path,"day0.counts.filtered.csv")) # 'path' called in previous # write .csv section
write.csv(all.counts.filtered,paste(path,"all.counts.filtered.csv"))
write.csv(day21.counts.filtered, paste(path,"day21.counts.filtered.csv"))
# SET WORKING DIRECTORY AND LOAD DATA
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# LOAD DATA
all.counts_filt <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.counts.filtered.csv", sep=',', header=TRUE)
d0.counts_filt <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.counts.filtered.csv", sep=',', header=TRUE)
d7.counts_filt <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day7.counts.filtered.csv", sep=',', header=TRUE)
d14.counts_filt <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day14.counts.filtered.csv", sep=',', header=TRUE)
d21.counts_filt <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day21.counts.filtered.csv", sep=',', header=TRUE)
d21.counts_filt
cts.merged.d0
day0.counts.filtered
write.csv(cts.matrix.d0.filtered,paste(path,"day0.counts.filtered_matrix.csv")) # 'path' called in previous # write .csv section
write.csv(cts.matrix.d7.filtered,paste(path,"day7.counts.filtered_matrix.csv")) # 'path' called in previous # write .csv section
write.csv(cts.matrix.d14.filtered,paste(path,"day14.counts.filtered_matrix.csv")) # 'path' called in previous # write .csv section
write.csv(cts.matrix.d21.filtered,paste(path,"day21.counts.filtered_matrix.csv")) # 'path' called in previous # write .csv section
write.csv(cts.matrix.all.filtered,paste(path,"all.counts.filtered_matrix.csv")) # 'path' called in previous # write .csv section
exp.data.d21
write.csv(exp.data.d21,paste(path," day21.exp.data.csv"))
write.csv(exp.data.d0,paste(path," day0.exp.data.csv"))
write.csv(exp.data.d7,paste(path," day7.exp.data.csv"))
write.csv(exp.data.d14,paste(path," day14.exp.data.csv"))
write.csv(exp.data,paste(path,"all.exp.data.csv"))
write.csv(exp.data.d0,paste(path,"day0.exp.data.csv"))
write.csv(exp.data.d7,paste(path,"day7.exp.data.csv"))
write.csv(exp.data,paste(path,"all.exp.data.csv"))
write.csv(exp.data.d0,paste(path,"day0.exp.data.csv"))
write.csv(exp.data.d7,paste(path,"day7.exp.data.csv"))
write.csv(exp.data.d14,paste(path," day14.exp.data.csv"))
write.csv(exp.data.d21,paste(path," day21.exp.data.csv"))
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.exp.data", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/all.exp.data", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.exp.data", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/   all.exp.data", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.exp.data", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/all.exp.data", sep=',', header=TRUE)
d0..exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/   day0.exp.data", sep=',', header=TRUE)
d0..exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/    day0.exp.data", sep=',', header=TRUE)
d0..exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.exp.data", sep=',', header=TRUE)
d0..exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/day0.exp.data", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/all.exp.data.csv", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.exp.data.csv", sep=',', header=TRUE)
d0..exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.exp.data.csv", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.exp.data.csv", sep=',', header=TRUE)
d0.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.exp.data.csv", sep=',', header=TRUE)
d7.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day7.exp.data.csv", sep=',', header=TRUE)
d14.exp_data <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day14.exp.data.csv", sep=',', header=TRUE)
d21.exp_data <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day21.exp.data.csv", sep=',', header=TRUE)
d14.exp_data <- read.csv(file="RAnalysis/DESeq2/counts_filtered/day14.exp.data.csv", sep=',', header=TRUE)
d0.exp_data   <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.exp.data.csv", sep=',', header=TRUE)
d7.exp_data   <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day7.exp.data.csv", sep=',', header=TRUE)
d14.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day14.exp.data.csv", sep=',', header=TRUE)
d14.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/day14.exp.data.csv", sep=',', header=TRUE)
d14.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/  day14.exp.data.csv", sep=',', header=TRUE)
d21.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day21.exp.data.csv", sep=',', header=TRUE)
d21.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/  day21.exp.data.csv", sep=',', header=TRUE)
all.exp_data
# format Experiment/design dataframe into matrix
exp.data.Amb_all <- all.exp_data %>% dplyr::filter(Primary_Treatment %in% "A") %>%  dplyr::select(c('Sample.Name', 'Treat.day', 'All_Treatment')) # coondense dataset to build target matrix
library(dplyr)
# format Experiment/design dataframe into matrix
exp.data.Amb_all <- all.exp_data %>% dplyr::filter(Primary_Treatment %in% "A") %>%  dplyr::select(c('Sample.Name', 'All_Treatment')) # coondense dataset to build target matrix
exp.data.Amb_all
all.exp_data
# format Experiment/design dataframe into matrix
exp.data.Amb_all <- all.exp_data %>% dplyr::filter(Primary_Treatment %in% "A") %>%  dplyr::select(c('Sample.Name', 'All_Treatment', 'Time')) # coondense dataset to build target matrix
exp.data.Amb_all$Treat.day <- paste(exp.data.Amb_all$Primary_Treatment, (substr(exp.data.Amb_all$Time, 4,5), sep ="_")) # change Primary_Treatment to factor
exp.data.Amb_all$Treat.day <- paste(exp.data.Amb_all$Primary_Treatment, (substr(exp.data.Amb_all$Time, 4,5)), sep ="_") # change Primary_Treatment to factor
exp.data.Amb_all$Treat.day
exp.data.Amb_all$Primary_Treatment
exp.data.Amb_all$Treat.day <- paste(exp.data.Amb_all$All_Treatment, (substr(exp.data.Amb_all$Time, 4,5)), sep ="_") # change Primary_Treatment to factor
exp.data.Amb_all$Treat.day
# exp.data.d0.PRIMARY$Time <- factor(exp.data.d0.PRIMARY$Time) # change Time to factor
exp.data.Amb_all <- data.frame(exp.data.Amb_all[,-1], row.names=exp.data.Amb_all[,1]) # move Sample.Name column as row names
exp.data.Amb_all.mtx <- as.matrix(exp.data.Amb_all, row.names="Geoduck.ID") # create matrix
exp.data.Amb_all.mtx
all.counts
all.counts
# LOAD DATA
# filtered counts tables [from Count_Matrix_Stats.Filter.R]
all.counts <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.counts.filtered.csv", sep=',', header=TRUE)
d0.counts  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.counts.filtered.csv", sep=',', header=TRUE)
d7.counts  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day7.counts.filtered.csv", sep=',', header=TRUE)
d14.counts <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day14.counts.filtered.csv", sep=',', header=TRUE)
d21.counts <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day21.counts.filtered.csv", sep=',', header=TRUE)
all.counts
all.counts
cts.merged.Ambient.all <- all.counts_matrix[,c(1,na.omit(match(exp.data.Amb_all$Sample.Name, colnames(all.counts_matrix))))]
all.counts_matrix
# matrix version of the same data above  [from Count_Matrix_Stats.Filter.R]
all.counts_matrix <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.counts.filtered_matrix.csv", sep=',', header=TRUE)
d0.counts_matrix  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.counts.filtered_matrix.csv", sep=',', header=TRUE)
d7.counts_matrix  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day7.counts.filtered_matrix.csv", sep=',', header=TRUE)
d14.counts_matrix <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day14.counts.filtered_matrix.csv", sep=',', header=TRUE)
d21.counts_matrix <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day21.counts.filtered_matrix.csv", sep=',', header=TRUE)
# experiment data [from Count_Matrix_Stats.Filter.R]
all.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.exp.data.csv", sep=',', header=TRUE)
d0.exp_data   <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.exp.data.csv", sep=',', header=TRUE)
d7.exp_data   <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day7.exp.data.csv", sep=',', header=TRUE)
d14.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/  day14.exp.data.csv", sep=',', header=TRUE)
d21.exp_data  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/  day21.exp.data.csv", sep=',', header=TRUE)
cts.merged.Ambient.all <- all.counts_matrix[,c(1,na.omit(match(exp.data.Amb_all$Sample.Name, colnames(all.counts_matrix))))]
dim(cts.merged.Ambient.all) # genes 13870   number samples 23
cts.merged.Ambient.all
exp.data.Amb_all
exp.data.Amb_all$Sample.Name
# format Experiment/design dataframe into matrix
exp.data.Amb_all <- all.exp_data %>% dplyr::filter(Primary_Treatment %in% "A") %>%  dplyr::select(c('Sample.Name', 'All_Treatment', 'Time')) # coondense dataset to build target matrix
exp.data.Amb_all$Treat.day <- paste(exp.data.Amb_all$All_Treatment, (substr(exp.data.Amb_all$Time, 4,5)), sep ="_") # change Primary_Treatment to factor
# exp.data.d0.PRIMARY$Time <- factor(exp.data.d0.PRIMARY$Time) # change Time to factor
exp.data.Amb_all <- data.frame(exp.data.Amb_all[,-1], row.names=exp.data.Amb_all[,1]) # move Sample.Name column as row names
exp.data.Amb_all.mtx <- as.matrix(exp.data.Amb_all, row.names="Geoduck.ID") # create matrix
exp.data.Amb_all$Sample.Name
exp.data.Amb_all
# format Experiment/design dataframe into matrix
exp.data.Amb_all <- all.exp_data %>% dplyr::filter(Primary_Treatment %in% "A") %>%  dplyr::select(c('Sample.Name', 'All_Treatment', 'Time')) # coondense dataset to build target matrix
exp.data.Amb_all$Treat.day <- paste(exp.data.Amb_all$All_Treatment, (substr(exp.data.Amb_all$Time, 4,5)), sep ="_") # change Primary_Treatment to factor
exp.data.Amb_all
# exp.data.d0.PRIMARY$Time <- factor(exp.data.d0.PRIMARY$Time) # change Time to factor
exp.data.Amb_all <- data.frame(exp.data.Amb_all[,-1], row.names=exp.data.Amb_all[,1]) # move Sample.Name column as row names
exp.data.Amb_all.mtx <- as.matrix(exp.data.Amb_all, row.names="Geoduck.ID") # create matrix
exp.data.Amb_all
# format Experiment/design dataframe into matrix
exp.data.Amb_all <- all.exp_data %>% dplyr::filter(Primary_Treatment %in% "A") %>%  dplyr::select(c('Sample.Name', 'All_Treatment', 'Time')) # coondense dataset to build target matrix
exp.data.Amb_all$Treat.day <- paste(exp.data.Amb_all$All_Treatment, (substr(exp.data.Amb_all$Time, 4,5)), sep ="_") # change Primary_Treatment to factor
# exp.data.d0.PRIMARY$Time <- factor(exp.data.d0.PRIMARY$Time) # change Time to factor
exp.data.Amb_all.mtx <- data.frame(exp.data.Amb_all[,-1], row.names=exp.data.Amb_all[,1]) # move Sample.Name column as row names
exp.data.Amb_all.mtx <- as.matrix(exp.data.Amb_all, row.names="Geoduck.ID") # create matrix
cts.merged.Ambient.all <- all.counts_matrix[,c(1,na.omit(match(exp.data.Amb_all$Sample.Name, colnames(all.counts_matrix))))]
cts.merged.Ambient.all
dim(cts.merged.Ambient.all) # genes 13870   number samples 23
cts.merged.Ambient.all
# CKECK THE cts.matrix AND THE exp.data.mtx
exp.data.Amb_all.mtx <- exp.data.Amb_all.mtx[match(colnames(all.counts),rownames(exp.data.Amb_all.mtx)), ]
exp.data.Amb_all.mtx
# format Experiment/design dataframe into matrix
exp.data.d0.PRIMARY <- all.exp_data %>% dplyr::select(c('Sample.Name', 'Primary_Treatment', 'All_Treatment')) # coondense dataset to build target matrix
exp.data.d0.PRIMARY
exp.data.d0.PRIMARY$Primary_Treatment <- factor(exp.data.d0.PRIMARY$Primary_Treatment) # change Primary_Treatment to factor
exp.data.d0.PRIMARY$All_Treatment <- factor(exp.data.d0.PRIMARY$All_Treatment) # change Time to factor
exp.data.d0.PRIMARY <- data.frame(exp.data.d0.PRIMARY[,-1], row.names=exp.data.d0.PRIMARY[,1]) # move Sample.Name column as row names
exp.data.d0.PRIMARY.mtx <- as.matrix(exp.data.d0.PRIMARY, row.names="Geoduck.ID") # create matrix
# format Experiment/design dataframe into matrix
exp.data.d0.PRIMARY <- d0.exp_data %>% dplyr::select(c('Sample.Name', 'Primary_Treatment', 'All_Treatment')) # coondense dataset to build target matrix
exp.data.d0.PRIMARY$Primary_Treatment <- factor(exp.data.d0.PRIMARY$Primary_Treatment) # change Primary_Treatment to factor
exp.data.d0.PRIMARY$All_Treatment <- factor(exp.data.d0.PRIMARY$All_Treatment) # change Time to factor
exp.data.d0.PRIMARY <- data.frame(exp.data.d0.PRIMARY[,-1], row.names=exp.data.d0.PRIMARY[,1]) # move Sample.Name column as row names
exp.data.d0.PRIMARY.mtx <- as.matrix(exp.data.d0.PRIMARY, row.names="Geoduck.ID") # create matrix
cts.merged.d0
all.counts_matrix
d0.counts_matrix
d0.counts
# fix(exp.data.mtx) # view data - remove # to open
# CKECK THE cts.matrix AND THE exp.data.mtx
exp.data.d0.PRIMARY.mtx <- exp.data.d0.PRIMARY.mtx[match(colnames(d0.counts_matrix),rownames(exp.data.d0.PRIMARY.mtx)), ]
exp.data.d0.PRIMARY.mtx
cts.merged.d0
cts.merged.d0
cts.matrix.d0
d0.counts_matrix
day0.counts.filtered
cts.matrix.d0.filtered
d0.counts_matrix <- data.frame(d0.counts_matrix[,-1], row.names=d0.counts_matrix[,1])
d0.counts_matrix
all.counts_matrix <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ all.counts.filtered_matrix.csv", sep=',', header=TRUE)
all.counts_matrix <- data.frame(all.counts_matrix[,-1], row.names=all.counts_matrix[,1])
d0.counts_matrix  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day0.counts.filtered_matrix.csv", sep=',', header=TRUE)
d0.counts_matrix <- data.frame(d0.counts_matrix[,-1], row.names=d0.counts_matrix[,1])
d7.counts_matrix  <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day7.counts.filtered_matrix.csv", sep=',', header=TRUE)
d7.counts_matrix <- data.frame(d7.counts_matrix[,-1], row.names=d7.counts_matrix[,1])
d14.counts_matrix <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day14.counts.filtered_matrix.csv", sep=',', header=TRUE)
d14.counts_matrix <- data.frame(d14.counts_matrix[,-1], row.names=d14.counts_matrix[,1])
d21.counts_matrix <- read.csv(file="RAnalysis/DESeq2/counts_filtered/ day21.counts.filtered_matrix.csv", sep=',', header=TRUE)
d21.counts_matrix <- data.frame(d21.counts_matrix[,-1], row.names=d21.counts_matrix[,1])
# fix(exp.data.mtx) # view data - remove # to open
# CKECK THE cts.matrix AND THE exp.data.mtx
exp.data.d0.PRIMARY.mtx <- exp.data.d0.PRIMARY.mtx[match(colnames(d0.counts_matrix),rownames(exp.data.d0.PRIMARY.mtx)), ]
exp.data.d0.PRIMARY.mtx
all(rownames(exp.data.d0.PRIMARY.mtx) %in% colnames(d0.counts_matrix)) # should be TRUE
all(rownames(exp.data.d0.PRIMARY.mtx) == colnames(d0.counts_matrix)) # should be TRUE
all(rownames(exp.data.d0.PRIMARY.mtx) == colnames(d0.counts_matrix))  # should be TRUE
# build dds
dds.d0 <- DESeqDataSetFromMatrix(countData = d0.counts_matrix,
colData = exp.data.d0.PRIMARY.mtx,
design = ~ Primary_Treatment) # DESeq Data Set (dds) - design as ~Primary_Treatment
dds.d0 # view dds
# prep for DESeq2
dds.d0$Primary_Treatment <- relevel(dds.d0$Primary_Treatment, ref = "A") # specify the reference level for count analysis - A = the control treatment
levels(dds.d0$Primary_Treatment) #  levels for condition 'Treatment': "A" "M"
design(dds.d0) # view the design we have specified
ncol(dds.d0) # 8 cols - Good
nrow(dds.d0) # 15149 (cut-off of 3 CPM)
colData(dds.d0) # view the col data
exp.data.d7
# ==========================================================
# DAY 7 - FULL MODEL == design = ~ Primary_Treatment+Second_Treament+Primary_Treatment:Second_Treament
#---- INPUT: Experiment/design matrix == 'exp.data.d7'
#---- INPUT: TagSeq count matrix == 'cts.matrix.d7.filtered' (3 CPM in 50% samples)
# ==========================================================
d7.exp_data$Primary_Treatment <- factor(d7.exp_data$Primary_Treatment) # change Primary_Treatment to factor
d7.exp_data$All_Treatment <- factor(d7.exp_data$All_Treatment) # change Time to factor
d7.exp_data$Second_Treament <- factor(d7.exp_data$Second_Treament) # change Second_Treament to factor
#==================== #
# Primary*Second (ALL) Treatment
# format Experiment/design dataframe into matrix
exp.data.d7.PRIM_SEC <- d7.exp_data %>% dplyr::select(c('Sample.Name', 'Primary_Treatment', 'Second_Treament', 'All_Treatment')) # coondense dataset to build target matrix
exp.data.d7.PRIM_SEC <- data.frame(exp.data.d7.PRIM_SEC[,-1], row.names=exp.data.d7.PRIM_SEC[,1]) # move Sample.Name column as row names
exp.data.d7.PRIM_SEC.mtx <- as.matrix(exp.data.d7.PRIM_SEC, row.names="Geoduck.ID") # create matrix
# CKECK THE cts.matrix AND THE exp.data.mtx
exp.data.d7.PRIM_SEC.mtx <- exp.data.d7.PRIM_SEC.mtx[match(colnames(d7.counts_matrix),rownames(exp.data.d7.PRIM_SEC.mtx)), ]
all(rownames(exp.data.d7.PRIM_SEC.mtx) %in% colnames(d7.counts_matrix)) # should be TRUE
all(rownames(exp.data.d7.PRIM_SEC.mtx) == colnames(d7.counts_matrix)) # should be TRUE
all(rownames(exp.data.d7.PRIM_SEC.mtx) == colnames(d7.counts_matrix))  # should be TRUE
# build dds
# FULL MODEL
dds.d7 <- DESeqDataSetFromMatrix(countData = d7.counts_matrix,
colData = exp.data.d7.PRIM_SEC,
design = ~ Second_Treament+Primary_Treatment+Second_Treament:Primary_Treatment) # DESeq Data Set (dds) - design as ~Primary_Treatment
design(dds.d7) # ~Second_Treament + Primary_Treatment + Second_Treament:Primary_Treatment
# GROUP
dds.d7.group <- DESeqDataSetFromMatrix(countData = d7.counts_matrix,
colData = exp.data.d7.PRIM_SEC,
design = ~ All_Treatment-1)
design(dds.d7.group) # ~All_Treatment
# MAIN EFFECT
dds.d7.main <- DESeqDataSetFromMatrix(countData = d7.counts_matrix,
colData = exp.data.d7.PRIM_SEC,
design = ~ Second_Treament+Primary_Treatment)
design(dds.d7.main) # ~Second_Treament + Primary_Treatment
colData(dds.d7) # view the col data
# ==========================================================
# DAY 14 -  FULL MODEL == design = ~ Primary_Treatment+Second_Treament+Primary_Treatment:Second_Treament
#---- INPUT: Experiment/design matrix == 'exp.data.d14'
#---- INPUT: TagSeq count matrix == 'cts.matrix.d14.filtered' (3 CPM in 50% samples)
# ==========================================================
d14.exp_data$Primary_Treatment <- as.factor(d14.exp_data$Primary_Treatment) # change Primary_Treatment to factor
d14.exp_data$Second_Treament <- as.factor(d14.exp_data$Second_Treament) # change Second_Treament to factor
#==================== #
# Primary + Second; additive effect
# format Experiment/design dataframe into matrix
exp.data.d14.PRIM_SEC <- d14.exp_data %>% dplyr::select(c('Sample.Name', 'Primary_Treatment', 'Second_Treament', 'All_Treatment')) # coondense dataset to build target matrix
exp.data.d14.PRIM_SEC <- data.frame(exp.data.d14.PRIM_SEC[,-1], row.names=exp.data.d14.PRIM_SEC[,1]) # move Sample.Name column as row names
exp.data.d14.PRIM_SEC.mtx <- as.matrix(exp.data.d14.PRIM_SEC, row.names="Geoduck.ID") # create matrix
# CKECK THE cts.matrix AND THE exp.data.mtx
exp.data.d14.PRIM_SEC.mtx <- exp.data.d14.PRIM_SEC.mtx[match(colnames(d14.counts_matrix),rownames(exp.data.d14.PRIM_SEC.mtx)), ]
all(rownames(exp.data.d14.PRIM_SEC.mtx) %in% colnames(d14.counts_matrix)) # should be TRUE
all(rownames(exp.data.d14.PRIM_SEC.mtx) == colnames(d14.counts_matrix)) # should be TRUE
all(rownames(exp.data.d14.PRIM_SEC.mtx) == colnames(d14.counts_matrix))  # should be TRUE
# build dds
# FULL MODEL
dds.d14 <- DESeqDataSetFromMatrix(countData = d14.counts_matrix,
colData = exp.data.d14.PRIM_SEC.mtx,
design = ~ Second_Treament+Primary_Treatment+Second_Treament:Primary_Treatment) # DESeq Data Set (dds) - design as ~Primary_Treatment
design(dds.d14) # ~Second_Treament + Primary_Treatment + Second_Treament:Primary_Treatment
# GROUP
dds.d14.group <- DESeqDataSetFromMatrix(countData = d14.counts_matrix,
colData = exp.data.d14.PRIM_SEC.mtx,
design = ~ All_Treatment-1)
design(dds.d14.group) # ~All_Treatment
# MAIN EFFECT
dds.d14.main <- DESeqDataSetFromMatrix(countData = d14.counts_matrix,
colData = exp.data.d14.PRIM_SEC.mtx,
design = ~ Second_Treament+Primary_Treatment)
design(dds.d14.main) # ~Second_Treament + Primary_Treatment
# ==========================================================
# DAY 21 -  FULL MODEL == design = ~Primary_Treatment+Second_Treament+Third_Treatment+Primary_Treatment:Second_Treament+Primary_Treatment:Third_Treatment+Second_Treament:Third_Treatment
#---- INPUT: Experiment/design matrix == 'exp.data.d21'
#---- INPUT: TagSeq count matrix == 'cts.matrix.d21.filtered' (3 CPM in 50% samples)
# ==========================================================
d21.exp_data$Primary_Treatment <- factor(d21.exp_data$Primary_Treatment) # change Primary_Treatment to factor
d21.exp_data$Second_Treament <- factor(d21.exp_data$Second_Treament) # change Second_Treament to factor
d21.exp_data$Third_Treatment <- factor(d21.exp_data$Third_Treatment) # change Third_Treatment to factor
d21.exp_data$All_Treatment <- factor(d21.exp_data$All_Treatment) # change All_Treatment to factor
#==================== #
# Primary + Second +Third (and all interactions)
# format Experiment/design dataframe into matrix
exp.data.d21.PRIM_SEC_THIRD <- d21.exp_data %>% dplyr::select(c('Sample.Name', 'Primary_Treatment','Second_Treament', 'Third_Treatment', 'All_Treatment')) # coondense dataset to build target matrix
exp.data.d21.PRIM_SEC_THIRD <- data.frame(exp.data.d21.PRIM_SEC_THIRD[,-1], row.names=exp.data.d21.PRIM_SEC_THIRD[,1]) # move Sample.Name column as row names
exp.data.d21.PRIM_SEC_THIRD.mtx <- as.matrix(exp.data.d21.PRIM_SEC_THIRD, row.names="Geoduck.ID") # create matrix
# CKECK THE cts.matrix AND THE exp.data.mtx
exp.data.d21.PRIM_SEC_THIRD.mtx <- exp.data.d21.PRIM_SEC.mtx[match(colnames(d21.counts_matrix),rownames(exp.data.d21.PRIM_SEC_THIRD.mtx)), ]
all(rownames(exp.data.d21.PRIM_SEC_THIRD.mtx) %in% colnames(d21.counts_matrix)) # should be TRUE
all(rownames(exp.data.d21.PRIM_SEC_THIRD.mtx) == colnames(d21.counts_matrix)) # should be TRUE
all(rownames(exp.data.d21.PRIM_SEC_THIRD.mtx) == colnames(d21.counts_matrix))  # should be TRUE
# build dds
# full model
dds.d21 <- DESeqDataSetFromMatrix(countData = d21.counts_matrix,
colData = exp.data.d21.PRIM_SEC_THIRD.mtx,
design = ~ Primary_Treatment+
Second_Treament+
Third_Treatment+
Primary_Treatment:Second_Treament+
Primary_Treatment:Third_Treatment+
Second_Treament:Third_Treatment)
# GROUP
dds.d21.group <- DESeqDataSetFromMatrix(countData = d21.counts_matrix,
colData = exp.data.d21.PRIM_SEC_THIRD.mtx,
design = ~ All_Treatment-1)
# MAIN EFFECT
dds.d21.main <- DESeqDataSetFromMatrix(countData = d21.counts_matrix,
colData = exp.data.d21.PRIM_SEC_THIRD.mtx,
design = ~ Third_Treatment+Second_Treament+Primary_Treatment)
# ==========================================================
#
# DAY 0    (3 CPM in 50% samples)
# ==========================================================
nrow(dds.d0) # 15036 total genes pre filtered
dim(dds.d0) # 15149     8
design(dds.d0) # FULL MODEL ==- ~Primary_Treatment
# RUN DESEQ2 model
dds.d0 <- DESeq(dds.d0) # wait for this to complete....
resultsNames(dds.d0) # view the names of your results model 'Primary_Treatment_M_vs_A'
colData(dds.d0)
# Primary_Treatment_M_vs_A
resd0.primary <- results(dds.d0, alpha = 0.5) # already filtered in edgeR; FDR of 0.05 (~ 651.8 in 15.036 genes)
hist(resd0.primary$pvalue, breaks=20, col="grey") # view histogram,  about 425 genes are likely false positives, alpha = 0.05 FDR is good!
abline(h=(nrow(dds.d0)*0.05),col="red") # add line at expected 5% false positive
table(resd0.primary$padj<0.05) #  11  DEGs
resd0.primary <- resd0.primary[order(resd0.primary$padj), ] ## Order by adjusted p-value
# count and % upregulated and downregulated DEGs (first 13 rows of ordered table are the DEGs)
sum((resd0.primary$log2FoldChange[1:11] >= 1) == TRUE) # 3 DEGs upregulated  (LFC >= 1)
( sum((resd0.primary$log2FoldChange[1:11] >= 1) == TRUE) / (table(resd0.primary$padj<0.05))[2] ) * 100 # 27.27273 % DEGs upregulated (N = 971)
sum((resd0.primary$log2FoldChange[1:11] <= -1) == TRUE) # 8 DEGs downregulated  (LFC <= -1)
( sum((resd0.primary$log2FoldChange[1:11] <= -1) == TRUE) / (table(resd0.primary$padj<0.05))[2] ) * 100 # 72.72727 % DEGs downregulated (N = 971)
