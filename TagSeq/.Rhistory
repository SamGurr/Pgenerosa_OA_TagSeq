keep.d14 <- rowSums(thresh.d14) >= (ncol(thresh.d14)/2) # we would like to keep genes that have at least 50% TRUES in each row of thresh
cts.matrix.d14.LOOPED <- cts.matrix.d14[keep.d14,]
d14_total_genes           <- nrow(cts.matrix.d14.LOOPED)
d14_mean_reads_per_gene <- mean(rowSums(cts.matrix.d14.LOOPED))
# ==========================================================
#
# DAY 21
# ==========================================================
cts.merged.d21 <- raw_counts.merged.as.table[,c(1,na.omit(match(exp.data.d21$Sample.Name, colnames(raw_counts.merged.as.table))))]
cts.merged.d21 <- data.frame(cts.merged.d21[,-1], row.names=cts.merged.d21[,1])
cts.matrix.d21  <-as.matrix(cts.merged.d21, row.names="transcript_id")
CPM.d21 <- cpm(cts.matrix.d21) # Obtain CPMs (counts oer million) using egdeR
thresh.d21 <- CPM.d21 > var # Which values in myCPM are greater than 3?
keep.d21 <- rowSums(thresh.d21) >= (ncol(thresh.d21)/2) # we would like to keep genes that have at least 50% TRUES in each row of thresh
cts.matrix.d21.LOOPED <- cts.matrix.d21[keep.d21,]
d21_total_genes           <- nrow(cts.matrix.d21.LOOPED)
d21_mean_reads_per_gene <- mean(rowSums(cts.matrix.d21.LOOPED))
loop.table$CPM_threshold           <- c(var, var, var)
loop.table$Day                     <- c(7, 14, 21)
loop.table$total_genes             <- c(d7_total_genes, d14_total_genes, d21_total_genes)
loop.table$mean_reads_per_gene   <- c(d7_mean_reads_per_gene, d14_mean_reads_per_gene, d21_mean_reads_per_gene)
df <- data.frame(loop.table) # name dataframe for this singl e row
df_total <- rbind(df_total,df) #bind to a cumulative list dataframe
#print(df_total) # print to monitor progress
}
DAY7_filterfig <- df_total %>%
dplyr::filter(Day %in% 7) %>%
tidyr::gather(key = "variable", value = "measurement",
total_genes, mean_reads_per_gene, -Day) %>%
# Start with a usual ggplot2 call:
ggplot(aes(x = CPM_threshold)) +
geom_line(aes(y = measurement)) +
facet_wrap(. ~ variable, scales="free")
DAY7_filterfig
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
DAY14_filterfig <- df_total %>%
dplyr::filter(Day %in% 14) %>%
tidyr::gather(key = "variable", value = "measurement",
total_genes, mean_reads_per_gene, -Day) %>%
# Start with a usual ggplot2 call:
ggplot(aes(x = CPM_threshold)) +
geom_line(aes(y = measurement)) +
facet_wrap(. ~ variable, scales="free")
DAY14_filterfig
DAY21_filterfig <- df_total %>%
dplyr::filter(Day %in% 21) %>%
tidyr::gather(key = "variable", value = "measurement",
total_genes, mean_reads_per_gene, -Day) %>%
# Start with a usual ggplot2 call:
ggplot(aes(x = CPM_threshold)) +
geom_line(aes(y = measurement)) +
facet_wrap(. ~ variable, scales="free")
DAY21_filterfig
DAY14_filterfig <- df_total %>%
dplyr::filter(Day %in% 14) %>%
tidyr::gather(key = "variable", value = "measurement",
total_genes, mean_reads_per_gene, -Day) %>%
# Start with a usual ggplot2 call:
ggplot(aes(x = CPM_threshold)) +
geom_line(aes(y = measurement)) +
facet_wrap(. ~ variable, scales="free")
DAY14_filterfig
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# WGCNA results (all treatments)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_brown_KEGG_allgenes_unlisted")
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# WGCNA results (all treatments)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_brown_KEGG_allgenes_unlisted")
# WGCNA results (all treatments)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_brown_KEGG_allgenes_unlisted.csv")
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
wd
pwd
wd()
pwd()
wd()
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# WGCNA results (all treatments)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_brown_KEGG_allgenes_unlisted.csv")
d7_brown_KEGG
colnames(d7_brown_KEGG)
d7_brown_KEGG <- d7_brown_KEGG %>% select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',))
library(dplyr)
d7_brown_KEGG <- d7_brown_KEGG %>% select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',))
d7_brown_KEGG
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod <- 'Day7_brown') %>%
sort(Pathway_Description )
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod <- 'Day7_brown') %>%
sort('Pathway_Description')
d7_brown_KEGG
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod <- 'Day7_brown') %>%
group_by('Pathway_Description')
d7_brown_KEGG
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod <- 'Day7_brown')
# WGCNA results (all treatments)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_brown_KEGG_allgenes_unlisted.csv")
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod <- 'Day7_brown')
d7_brown_KEGG
# WGCNA results (all treatments)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_brown_KEGG_allgenes_unlisted.csv")
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod, 'Day7_brown')
# WGCNA results (all treatments)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_brown_KEGG_allgenes_unlisted.csv")
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day7_brown')
d7_brown_KEGG
# WGCNA results (all treatments)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_brown_KEGG_allgenes_unlisted.csv")
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day7_brown') %>%
arrange(factor(Pathway_Description))
d7_brown_KEGG
d7_greenyellow_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_greenyellow_KEGG_allgenes_unlisted.csv")
d7_greenyellow_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day7_greenyellow') %>%
arrange(factor(Pathway_Description))
d7_greenyellow_KEGG
d7_greenyellow_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_greenyellow_KEGG_allgenes_unlisted.csv")
d7_greenyellow_KEGG <- d7_greenyellow_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day7_greenyellow') %>%
arrange(factor(Pathway_Description))
d7_turquoise_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day7_turquoise_KEGG_allgenes_unlisted.csv")
d7_turquoise_KEGG <- d7_turquoise_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day7_turquoise') %>%
arrange(factor(Pathway_Description))
d7_turquoise_KEGG
d14_blue_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day14_blue_KEGG_allgenes_unlisted.csv")
d14_blue_KEGG <- d14_blue_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day14_blue') %>%
arrange(factor(Pathway_Description))
d14_blue_KEGG
d14_pink_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day14_pink_KEGG_allgenes_unlisted.csv")
d14_pink_KEGG <- d14_pink_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day14_pink') %>%
arrange(factor(Pathway_Description))
d21_blue_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day21_blue_KEGG_allgenes_unlisted.csv")
d21_blue_KEGG <- d21_blue_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day21_blue') %>%
arrange(factor(Pathway_Description))
d21_magenta_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Day21_magenta_KEGG_allgenes_unlisted.csv")
d21_magenta_KEGG <- d21_magenta_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day21_magenta') %>%
arrange(factor(Pathway_Description))
KEGG_Master_SubseqHyp <- rbind(d7_brown_KEGG, d7_greenyellow_KEGG, d7_turquoise_KEGG,
d14_blue_KEGG, d14_pink_KEGG,
d21_blue_KEGG, d21_magenta_KEGG)
View(KEGG_Master_SubseqHyp)
write.csv(KEGG_Master_SubseqHyp, file = paste("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Master_unlisted.csv", sep =''))
write.csv(KEGG_Master_SubseqHyp, file = paste("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Master_KEGG_all_genes_unlisted.csv", sep =''))
write.csv(KEGG_Master_SubseqHyp, file = paste("Analysis/Output/KEGG/subseq_hypercapnia/WGCNA/Master_KEGG_all_genes.csv", sep =''))
# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# WGCNA results (all treatments ) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
d0_midnightblue_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day0_midnightblue_KEGG_allgenes_unlisted.csv")
# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# WGCNA results (all treatments ) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
d0_midnightblue_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day0_midnightblue_KEGG_allgenes_unlisted.csv")
d0_midnightblue_KEGG <- d0_midnightblue_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day0_midnightblue') %>%
arrange(factor(Pathway_Description))
d0_midnightblue_KEGG
View(d7_greenyellow_KEGG)
d7_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day7_brown_KEGG_allgenes_unlisted.csv")
d7_brown_KEGG <- d7_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day7_brown') %>%
arrange(factor(Pathway_Description))
d7_yellow_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day7_yellow_KEGG_allgenes_unlisted.csv")
d7_yellow_KEGG <- d7_yellow_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day7_yellow') %>%
arrange(factor(Pathway_Description))
d14_black_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day14_black_KEGG_allgenes_unlisted.csv")
d14_black_KEGG <- d14_black_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day14_black') %>%
arrange(factor(Pathway_Description))
d14_brown_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day14_brown_KEGG_allgenes_unlisted.csv")
d14_brown_KEGG <- d14_brown_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day14_brown') %>%
arrange(factor(Pathway_Description))
d14_magenta_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day14_magenta_KEGG_allgenes_unlisted.csv")
d14_magenta_KEGG <- d14_magenta_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day21_blue') %>%
arrange(factor(Pathway_Description))
d14_magenta_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day14_magenta_KEGG_allgenes_unlisted.csv")
d14_magenta_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day14_magenta_KEGG_allgenes_unlisted.csv")
d14_magenta_KEGG <- d14_magenta_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day21_magenta') %>%
arrange(factor(Pathway_Description))
d14_magenta_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day14_magenta_KEGG_allgenes_unlisted.csv")
d14_magenta_KEGG <- d14_magenta_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day14_magenta') %>%
arrange(factor(Pathway_Description))
d21_magenta_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day21_magenta_KEGG_allgenes_unlisted.csv")
d21_magenta_KEGG <- d21_magenta_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day21_magenta') %>%
arrange(factor(Pathway_Description))
d21_black_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day21_black_KEGG_allgenes_unlisted.csv")
d21_black_KEGG <- d21_black_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day21_black') %>%
arrange(factor(Pathway_Description))
d21_blue_KEGG   <- read.csv("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Day21_blue_KEGG_allgenes_unlisted.csv")
d21_blue_KEGG <- d21_blue_KEGG %>%
select(c('Cgigas_PathwayID','Pathway_Description','Cgigas_KEGG_IDs','Gene_name',)) %>%
dplyr::mutate(day_mod = 'Day21_blue') %>%
arrange(factor(Pathway_Description))
KEGG_Master_AllTreatments <- rbind(d0_midnightblue_KEGG,
d7_brown_KEGG, d7_yellow_KEGG,
d14_black_KEGG, d14_brown_KEGG, d14_magenta_KEGG
d21_black_KEGG, d21_blue_KEGG, d21_magenta_KEGG)
KEGG_Master_AllTreatments <- rbind(d0_midnightblue_KEGG,
d7_brown_KEGG, d7_yellow_KEGG,
d14_black_KEGG, d14_brown_KEGG, d14_magenta_KEGG,
d21_black_KEGG, d21_blue_KEGG, d21_magenta_KEGG)
View(KEGG_Master_AllTreatments)
write.csv(KEGG_Master_AllTreatments, file = paste("Analysis/Output/KEGG/subseq_treatments_all/WGCNA/Master_KEGG_all_genes.csv", sep =''))
# LOAD PACKAGES
library(KEGGprofile) # BiocManager::install("KEGGprofile")
library(clusterProfiler)
library(KEGGREST)
library(tidyr)
library(stringr)
library(forcats)
library(ggplot2)
library(scales)
library(ape)
library(data.table)
library(tidyverse)
library(fBasics)
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# Crass_gigas_genome_dataframe - what is this? after KEGG enrichment analysis this script with unlist genes ithin enriched pathways and merge IDs to obtain the gene names
#NOTE: view the Pgenerasa genome - there are no instance of '-like', '-like isoform', '-like protein precursor', 'isoform X', 'precursor' at the end of terms,
Crass_gigas_genome <- keggList("crg") # call the C. gigas genome! - notice the csa terms are rownames!
Crass_gigas_genome_dataframe <- as.data.frame(Crass_gigas_genome) %>%  rownames_to_column() # with will allow us to merge
colnames(Crass_gigas_genome_dataframe) <- c('sseqid', 'Gene_name') # rename the columns - call the KP term 'sseqid' to merge with the blast data - youll see why donwstream below...
# Pgen annotation files and the blastx (using DIAMONd) hits to Cgigas to use downstream in KEGG pathway analysis
Geoduck_annotation      <- read.delim2(file="C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Seq_details/Panopea-generosa-genes-annotations.txt", header=F)
ref_update_20210602     <- read.gff("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Seq_details/Panopea-generosa-v1.0.a4.gene.gff3", GFF3 = TRUE) # use library(ape) to import a gff3 as a datatable
crgKEGG_Pgenref_DIAMOND <- read.table(file ="C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/HPC_work/Output/crgKEGG_diamond_out.txt", sep = '\t', header = F)
colnames(crgKEGG_Pgenref_DIAMOND) <- c('qseqid','sseqid','pident', 'length', 'mismatch', 'gapopen', 'qstart', 'qend', 'sstart', 'send', 'evalue', 'bitscore') # change the names of the columns if the best blast hits
# WGCNA results (all treatments)
d0_WGCNA_all    <- read.csv("Analysis/Output/WGCNA/subseq_treatments_all/Day0/d0.WGCNA_ModulMembership.csv")
d7_WGCNA_all    <- read.csv("Analysis/Output/WGCNA/subseq_treatments_all/Day7/d7.WGCNA_ModulMembership.csv")
d14_WGCNA_all   <- read.csv("Analysis/Output/WGCNA/subseq_treatments_all/Day14/d14.WGCNA_ModulMembership.csv")
d21_WGCNA_all   <- read.csv("Analysis/Output/WGCNA/subseq_treatments_all/Day21/d21.WGCNA_ModulMembership.csv")
# merge with the cgigas KEGG genome IDs
crgKEGG_Pgenref_DIAMOND_merge  <- merge(crgKEGG_Pgenref_DIAMOND, Crass_gigas_genome_dataframe, by = 'sseqid')
# PERCENT OF ANNOTATED (GENE NAME AND GO TERM) UNIGENS OF PGENEROSA WITH A BLAST HIT
# lets see how many of the gens in the Pgneorsa geome with putative gene name (unigenes annotated) have a successful blast hit!
Geoduck_annotation_OM <- na.omit(Geoduck_annotation) # remove all instances of NA (genes without gene name!)
test <- Geoduck_annotation_OM %>% dplyr::filter(V1 %in% crgKEGG_Pgenref_DIAMOND_merge$qseqid) # filter this dataset by the names in the crg KEGG blast result set
length(test$V1) # 12811 total unigenes from the blast hit in the pool of unigenes iwth gene name
( length(test$V1) / length(Geoduck_annotation_OM$V1) ) * 100 # 87.32193 % of the Pgen genome (unigenes with gene name) had a successful blast hit to the Cgigas protein database!
# ommit all rows that contain the specifi string"uncharacterized protein" in the 'Gene_name' column
crgKEGG_Pgenref_DIAMOND_OM <- crgKEGG_Pgenref_DIAMOND_merge[- grep("uncharacterized", crgKEGG_Pgenref_DIAMOND_merge$Gene_name),]
length(unique(crgKEGG_Pgenref_DIAMOND_OM$qseqid)) # 13726 of 14671 - narrowed down about 5000 hits!
# FILTER BEST BLAST HITS - Clean the blast (using DIAMOND) hits
# call unique rows (containg unique Pgenerosa IDs and the corresponsding 'crg' KEGG number or 'KO' ID)
# w/ the hightest bit score
crgKEGG_PgenREF           <- as.data.table(crgKEGG_Pgenref_DIAMOND_OM)
crgKEGG_PgenREF_besthits  <- crgKEGG_PgenREF[,.SD[which.max(bitscore)],by=qseqid] # best hits by highest bit score - do sanity check below..
# sanity check - run by max bitcore and by min evalue - should all say TRUE - use View(booleans)
bybitscore  <- crgKEGG_PgenREF[,.SD[which.max(bitscore)],by=qseqid] # max bitscore
byevalue    <- crgKEGG_PgenREF[,.SD[which.min(evalue)],by=qseqid] # min evalue
View(crgKEGG_PgenREF_besthits) # file does not contain any ocurance s of 'uncharacterized..." that will not provide insight on pathway enrichment
# WHAT IS THE MEANSD BIT SCORE, EVALUE AND PERCENTID OF THE best hits (note: also NON 'uncharacteried protein or uncharacterized family)
mean(crgKEGG_PgenREF_besthits$pident)
colnames(crgKEGG_PgenREF_besthits)
colMeans(crgKEGG_PgenREF_besthits[,c('pident', 'length', 'evalue', 'bitscore')], na.rm=TRUE)
colStdevs(crgKEGG_PgenREF_besthits[,c('pident', 'length', 'evalue', 'bitscore')], na.rm=TRUE)
# LOAD DATA    :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
# BIOLOGICAL PROCESS  GO  SLIMS
crgKEGG_PgenREF_besthits$qseqid
colnames(crgKEGG_PgenREF_besthits)[1:2] <- c('geneSymbol', 'crg_KO') # reanme the first two columns to merge witht he WGCNA results!
d0_WGCNA_crgKEGGhits  <- merge(d0_WGCNA_all, crgKEGG_PgenREF_besthits[,c(1:2)], by ='geneSymbol')
d7_WGCNA_crgKEGGhits  <- merge(d7_WGCNA_all, crgKEGG_PgenREF_besthits[,c(1:2)], by ='geneSymbol')
d14_WGCNA_crgKEGGhits <- merge(d14_WGCNA_all, crgKEGG_PgenREF_besthits[,c(1:2)], by ='geneSymbol')
d21_WGCNA_crgKEGGhits <- merge(d21_WGCNA_all, crgKEGG_PgenREF_besthits[,c(1:2)], by ='geneSymbol')
# Day 21 for loop ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;;; #
Day21_WGCNA_sigmodules <- as.data.frame(c('blue','magenta', 'yellow', 'black', 'pink', 'red', 'turquoise'))
# start with loop by calling the row value common with the 'Master_KEGG_BPTerms' data frind from rbind above
modColor <- Day21_WGCNA_sigmodules[3,1]
modColor
# call the module color in the Day 7 data
module_without_filter   <- d21_WGCNA_all %>% dplyr::filter(moduleColor %in% modColor)
genes_per_module        <- length(unique(module_without_filter$geneSymbol)) # nrow(ModuleLoop) # use this for the looped print out
annotgenes_per_module   <- length(na.omit(module_without_filter$HGNC)) # nrow(ModuleLoop) # use this for the looped print out
ModuleLoop_blasthit            <- d21_WGCNA_crgKEGGhits %>% dplyr::filter(moduleColor %in% modColor)
genes_per_module_blasthit      <- na.omit(module_without_filter)  %>% # ommit  genes without gene name annotation
dplyr::filter(moduleColor %in% modColor) %>%   # filter for the module loop
dplyr::filter(geneSymbol %in% d21_WGCNA_crgKEGGhits$geneSymbol) %>%  # call only genes that have a blast hit
nrow() #
perc_annot_genes_with_blasthit <- ( genes_per_module_blasthit / annotgenes_per_module ) *100
# calaculate the percent mapped and print this...
print(paste("Day21", modColor, " ",
genes_per_module, "genes per module",
annotgenes_per_module, " annotated; ",
genes_per_module_blasthit, " or", perc_annot_genes_with_blasthit,"% annotated genes with blasthit", sep = ' '))
# Run KEGG analysis
KEGG_vector_Pgen_Cgigas   <- as.vector(gsub(".*:","",ModuleLoop_blasthit$crg_KO)) # ommit the 'crg:' before the actual terms
KEGG_cgigas <- enrichKEGG(gene = KEGG_vector_Pgen_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
# LOAD PACKAGES
library(KEGGprofile) # BiocManager::install("KEGGprofile")
BiocManager::install("KEGGprofile")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
# LOAD PACKAGES
library(KEGGprofile) # BiocManager::install("KEGGprofile")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
# LOAD PACKAGES
library(KEGGprofile) # BiocManager::install("KEGGprofile")
BiocManager::install("KEGGprofile")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
install.packages('stringi')
install.packages("stringi")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
install.packages('tibble')
install.packages("tibble")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
install.packages('surviva')
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
install.packages('survival')
BiocManager::install("KEGGprofile")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
install.packages('tibble')
install.packages("tibble")
BiocManager::install("KEGGprofile")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
install.packages('survival')
BiocManager::install("KEGGprofile")
BiocManager::install("KEGGREST")
library(KEGGREST)
BiocManager::install("KEGGprofile")
library(survival)
library(survival, lib.loc = "C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="~/R/win-library/4.1")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
detach("package:survival", unload = TRUE)
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
BiocManager::install("KEGGprofile")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
install.packages('survival')
BiocManager::install("KEGGprofile")
library(survival, lib.loc = "C:/Program Files/R/R-4.1.1/library")
detach("package:survival", unload = TRUE)
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="~/R/win-library/4.1")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
remove.packages("survival", lib="C:/Program Files/R/R-4.1.1/library")
install.packages("KEGGprofiler")
BiocManager::install("KEGGprofile")
# LOAD PACKAGES
BiocManager::install("KEGGprofile")
library(survival, lib.loc = "C:/Program Files/R/R-4.1.1/library")
detach("package:survival", unload = TRUE)
BiocManager::install("KEGGprofile")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
install.packages('survival')
BiocManager::install("KEGGprofile")
BiocManager::install("KEGGprofile")
BiocManager::install("KEGGprofile")
library(installr)
updateR()
library(installr)
install.packages('installr')
library(installr)
updateR()
ap <- available.packages()
ap
"KEGGprofile" %in% rownames(ap)
"KEGGREST" %in% rownames(ap)
"tidyr" %in% rownames(ap)
setRepositories()
BiocManager::install("KEGGprofile")
setRepositories()
setRepositories()
# LOAD PACKAGES
BiocManager::install("KEGGprofile")
setRepositories()
source("http://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
source("http://bioconductor.org/biocLite.R")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
# LOAD PACKAGES
BiocManager::install("BiocUpgrade")
---
# title: "KEGG analysis"
# author: "Samuel Gurr"
# date: "April 23, 2021"
---
# INFORMATION FOR KEGG IN R FOUND HERE: (http://yulab-smu.top/clusterProfiler-book/chapter6.html#kegg-over-representation-test)
# LOAD PACKAGES
BiocManager::install("KEGGprofile")
