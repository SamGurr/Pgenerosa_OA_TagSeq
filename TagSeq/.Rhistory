PreexpResponse_genes       = PreexpResponse_genes$Pgen_ID
PreexpResponse_genes_ANNOT = match(PreexpResponse_genes, annot$V1)
PreexpResponse_genes_data <- data.frame(geneSymbol = annot$V1[PreexpResponse_genes_ANNOT],
Annotation = annot$V7[PreexpResponse_genes_ANNOT]))
PreexpResponse_genes_ANNOT
PreexpResponse_genes
# View(Frontloaded_genes)
PreexpResponse_genes       = PreexpResponse_genes$Pgen_ID
Preexposed_modules   <- rbind(day7.yellow, day14.black, day21.yellow)
PreexpResponse_genes <- Preexposed_modules %>%
dplyr::group_by(Pgen_ID) %>%
dplyr::summarise(count = n()) %>%
dplyr::filter(count == 2)
# View(Frontloaded_genes)
PreexpResponse_genes       = PreexpResponse_genes$Pgen_ID
PreexpResponse_genes_ANNOT = match(PreexpResponse_genes, annot$V1)
PreexpResponse_genes_data <- data.frame(geneSymbol = annot$V1[PreexpResponse_genes_ANNOT],
Annotation = annot$V7[PreexpResponse_genes_ANNOT]))
PreexpResponse_genes_data <- data.frame(geneSymbol = annot$V1[PreexpResponse_genes_ANNOT],
Annotation = annot$V7[PreexpResponse_genes_ANNOT])
source("~/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Scripts/DE_frontloading.R", echo=TRUE)
PreexpResponse_genes_data
# (2) Naive_modules # modules with higher expression by naive animals (relaive to preexposed animals)
day7.brown    <- day7.ModMem %>% dplyr::filter(moduleColor %in% 'brown')     %>% dplyr::mutate(day ='Day7')
day14.brown   <- day14.ModMem %>% dplyr::filter(moduleColor %in% 'brown')    %>% dplyr::mutate(day ='Day14')
day21.blue    <- day21.ModMem %>% dplyr::filter(moduleColor %in% 'blue')     %>% dplyr::mutate(day ='Day21')
day21.magenta <- day21.ModMem %>% dplyr::filter(moduleColor %in% 'magenta')  %>% dplyr::mutate(day ='Day21')
Naive_modules <- rbind(day7.brown, day14.brown, day21.blue, day21.magenta)
NaiveResponse_genes <- Naive_modules %>%
dplyr::group_by(Pgen_ID) %>%
dplyr::summarise(count = n()) %>%
dplyr::filter(count == 3)
# View(NaiveResponse_genes)
NaiveResponse_genes        = NaiveResponse_genes$Pgen_ID
NaiveResponse_genes_ANNOT  = match(NaiveResponse_genes, annot$V1)
NaiveResponse_genes_data   <- data.frame(geneSymbol = annot$V1[NaiveResponse_genes_ANNOT],
Annotation = annot$V7[NaiveResponse_genes_ANNOT])
Annot_ModuleMembership <-  read.csv("Analysis/Output/WGCNA/subseq_treatments_all/TimeSeries/TimeSeries.WGCNA_ModulMembership.csv") %>% dplyr::select(c('geneSymbol','moduleColor'))
Naive_mod_yellow       <-  Annot_ModuleMembership %>% dplyr::filter(moduleColor %in% 'yellow')
nrow(Naive_mod_yellow)
# filter the 'NaiveResponse_genes_data' for genes in module yellow (TimeSeries showing higher expression on all sampling days 7 14 and 21 than the preexposed animals)
NaiveResponse_genes_FILT <-NaiveResponse_genes_data %>% dplyr::filter(geneSymbol %in% Naive_mod_yellow$geneSymbol)
( (nrow(NaiveResponse_genes_FILT) / nrow(NaiveResponse_genes_data) )* 100) # 99.04762 only 3 genes not present in module yellow
PreexpResponse_genes_data
nrow(PreexpResponse_genes_data)
norw(NaiveResponse_genes_data)
# View(NaiveResponse_genes)
NaiveResponse_genes        = NaiveResponse_genes$Pgen_ID
NaiveResponse_genes_ANNOT  = match(NaiveResponse_genes, annot$V1)
NaiveResponse_genes_data   <- data.frame(geneSymbol = annot$V1[NaiveResponse_genes_ANNOT],
Annotation = annot$V7[NaiveResponse_genes_ANNOT])
norw(NaiveResponse_genes_data)
nrow(NaiveResponse_genes_data)
# NEXT......
# this set of genes represents those that CONTINUOUSLY present in modules
# highly correlated with the primary treatment for higher expression by NAIVE animals than preexposed animals
# Thus, these genes are NOT presentin any modules correlated with preexposed animals
# NOTE: are these the same as the TimeSeries WGNCA??
Annot_ModuleMembership <-  read.csv("Analysis/Output/WGCNA/subseq_treatments_all/TimeSeries/TimeSeries.WGCNA_ModulMembership.csv") %>% dplyr::select(c('geneSymbol','moduleColor'))
Naive_mod_yellow       <-  Annot_ModuleMembership %>% dplyr::filter(moduleColor %in% 'yellow')
nrow(Naive_mod_yellow)
# filter the 'NaiveResponse_genes_data' for genes in module yellow (TimeSeries showing higher expression on all sampling days 7 14 and 21 than the preexposed animals)
NaiveResponse_genes_FILT <-NaiveResponse_genes_data %>% dplyr::filter(geneSymbol %in% Naive_mod_yellow$geneSymbol)
( (nrow(NaiveResponse_genes_FILT) / nrow(NaiveResponse_genes_data) )* 100) # 99.04762 only 3 genes not present in module yellow
# Check the TimeSeries module vs. genes in separate modules ... % overlap TimeSeries - these new calls in this script
# (1) Prexposed genes of interest
# filter the 'NaiveResponse_genes_data' for genes in module BROWN in the TimeSeries WGCNA results
# (TimeSeries showing higher expression on all sampling days 7 14 and 21 than the preexposed animals)
Preex_mod_brown <-  Annot_ModuleMembership %>% dplyr::filter(moduleColor %in% 'brown')
nrow(Preex_mod_brown)
PreexpResponse_genes_FILT <- PreexpResponse_genes_data %>% dplyr::filter(geneSymbol %in% Preex_mod_brown$geneSymbol)
(nrow(NaiveResponse_genes_FILT)
nrow(NaiveResponse_genes_FILT)
nrow(PreexpResponse_genes_FILT)
nrow(PreexpResponse_genes_data)
( (nrow(PreexpResponse_genes_FILT) / nrow(PreexpResponse_genes_data) )* 100) # 99.04762 only 3 genes not present in module yellow
PreexpResponse_genes_FILT <- PreexpResponse_genes_data %>% dplyr::filter(geneSymbol %in% Preex_mod_brown$geneSymbol)
PreexpResponse_genes_FILT
( (nrow(PreexpResponse_genes_FILT) / nrow(PreexpResponse_genes_data) )* 100) # 99.04762 only 3 genes not present in module yellow
# Check the TimeSeries module vs. genes in separate modules ... % overlap TimeSeries - these new calls in this script
# (2) Naive  genes of interest
# filter the 'NaiveResponse_genes_data' for genes in module YELLOW in the TimeSeries WGCNA results
# (TimeSeries showing higher expression on all sampling days 7 14 and 21 than the preexposed animals)
Naive_mod_yellow <-  Annot_ModuleMembership %>% dplyr::filter(moduleColor %in% 'yellow')
nrow(Naive_mod_yellow)
NaiveResponse_genes_FILT <-NaiveResponse_genes_data %>% dplyr::filter(geneSymbol %in% Naive_mod_yellow$geneSymbol)
( (nrow(NaiveResponse_genes_FILT) / nrow(NaiveResponse_genes_data) )* 100) # 99.04762 only 3 genes not present in module yellow
WGCNA_presistantNaive_genes <- Day7AvMSecond_totalDEGs %>%
dplyr::filter(Gene %in% NaiveResponse_genes$Pgen_ID)
Day7AvMSecond_totalDEGs
NaiveResponse_genes
WGCNA_presistantNaive_genes <- Day7AvMSecond_totalDEGs %>%
dplyr::filter(Gene %in% NaiveResponse_genes)
WGCNA_presistantNaive_genes
WGCNA_naive_melted     <- WGCNA_presistantNaive_genes %>%
dplyr::select(!c('log2FoldChange', 'lfcSE','stat','pvalue','padj')) %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
WGCNA_naive_Merge <- merge(WGCNA_naive_melted, Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
WGCNA_naive_READY <- dcast(WGCNA_naive_Merge, Gene ~ All_Treatment)
WGCNA_naive_READY
wgcna.xall_1 <- ( (WGCNA_naive_READY$MM / WGCNA_naive_READY$MA) / (WGCNA_naive_READY$AM / WGCNA_naive_READY$AA) ) # call MA as the control for the MM ratio
wgcna.xall_2 <- ( (WGCNA_naive_READY$MM / WGCNA_naive_READY$AA) / (WGCNA_naive_READY$AM / WGCNA_naive_READY$AA) ) # call AA as the control for the MM ratio
wgcna.xall_3 <- (WGCNA_naive_READY$MM / WGCNA_naive_READY$AM)  # call AA as the control for the MM ratio
WGCNA_naive_READY$xall_1 <- wgcna.xall_1
WGCNA_naive_READY$xall_2 <- wgcna.xall_2
WGCNA_naive_READY$xall_3 <- wgcna.xall_3
# lets calculate it
wgcna.yall <- (WGCNA_naive_READY$MA / WGCNA_naive_READY$AA)
WGCNA_naive_READY$yall <- wgcna.yall
# Steps
# (4) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# lets plot it!
library(ggplot2)
P.wgcna <- WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_1, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
P.wgcna
# call genes with x axis vaulue < 1
wgcna.frontloaded_genes <- WGCNA_naive_READY %>%
dplyr::filter(xall_1 < 1) %>%
dplyr::filter(yall > 1) %>%
dplyr::select('Gene') # %>%
# load the P generosa annotated genes file
annot                        = read.delim2(file = "Seq_details/Panopea-generosa-genes-annotations.txt",header = F);
wgcna.frontloadprobes        = wgcna.frontloaded_genes$Gene
probes2annot                 = match(wgcna.frontloadprobes, annot$V1)
wgcna.frontloaded_genesANNOT = data.frame(geneSymbol = annot$V1[probes2annot],
Genes = annot$V7[probes2annot])
View(wgcna.frontloaded_genesANNOT)
Day7AvMSecond_totalDEGs
WGCNA_presistantNaive_genes <- Day7AvMSecond_totalDEGs %>%
dplyr::filter(Gene %in% NaiveResponse_genes)
# instead of filtering by genes < padj or threshold fold change....
# filter this dataset of genes on Day 7 by the genes present
# across ALL DAYS via WGCNA with higher expression by naive clams
# rationale here is...
# Genes present in the Day 7 matrix showed a larger quantity of sig DEs showing
# differential expression under the second treatment A v M, however this treatment encompasses
# BOTH the naive and preexposed animals..
# Thus here we call all of the genes via WGCNA showin ghigher expression by Naive history
WGCNA_presistantNaive_genes <- Day7AvMSecond_totalDEGs %>%
dplyr::filter(Gene %in% NaiveResponse_genes)
View(WGCNA_presistantNaive_genes)
# View(WGCNA_presistantNaive_genes)
WGCNA_naive_melted     <- WGCNA_presistantNaive_genes %>%
dplyr::select(!c('log2FoldChange', 'lfcSE','stat','pvalue','padj')) %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
WGCNA_naive_melted
WGCNA_naive_Merge <- merge(WGCNA_naive_melted, Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
WGCNA_naive_Merge
WGCNA_naive_READY <- dcast(WGCNA_naive_Merge, Gene ~ All_Treatment)
WGCNA_naive_READY
wgcna.xall_mod <- ( (WGCNA_naive_READY$MM / WGCNA_naive_READY$MA) / (WGCNA_naive_READY$AM / WGCNA_naive_READY$AA) ) # call MA as the control for the MM ratio
wgcna.xall_sev <- ( (WGCNA_naive_READY$MS / WGCNA_naive_READY$MA) / (WGCNA_naive_READY$AS / WGCNA_naive_READY$AA) ) # call AA as the control for the MM ratio
WGCNA_naive_READY$xall_mod <- wgcna.xall_mod
WGCNA_naive_READY$xall_sev <- wgcna.xall_sev
# lets calculate it
wgcna.yall <- (WGCNA_naive_READY$MA / WGCNA_naive_READY$AA)
WGCNA_naive_READY$yall <- wgcna.yall
# Steps
# (4) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# lets plot it!
library(ggplot2)
P.wgcna.mod <- WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_mod, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
P.wgcna.mod
# call genes with x axis vaulue < 1
wgcna.frontloaded_genes_mod <- WGCNA_naive_READY %>%
dplyr::filter(xall_mod < 1) %>%
dplyr::filter(yall > 1) %>%
dplyr::select('Gene') # %>%
# load the P generosa annotated genes file
annot                            = read.delim2(file = "Seq_details/Panopea-generosa-genes-annotations.txt",header = F);
wgcna.frontloadprobes_mod        = wgcna.frontloaded_genes_mod$Gene
probes2annot_mod                 = match(wgcna.frontloadprobes_mod, annot$V1)
wgcna.frontloaded_mod_ANNOT      = data.frame(geneSymbol = annot$V1[probes2annot_mod],
Genes = annot$V7[probes2annot_mod])
# plot the frontloaded genes formula using x axis for the severe treatment (second exposure, day 7)
P.wgcna.sev <- WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_sev, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
P.wgcna.sev
# sev
wgcna.frontloaded_genes_sev <- WGCNA_naive_READY %>%
dplyr::filter(xall_sev < 1) %>%
dplyr::filter(yall > 1) %>%
dplyr::select('Gene') # %>%
wgcna.frontloadprobes_sev        = wgcna.frontloaded_genes_sev$Gene
probes2annot_sev                 = match(wgcna.frontloadprobes_sev, annot$V1)
wgcna.frontloaded_sev_ANNOT      = data.frame(geneSymbol = annot$V1[probes2annot_sev],
Genes = annot$V7[probes2annot_sev])
View(wgcna.frontloaded_sev_ANNOT)
# mod
wgcna.frontloaded_genes_mod <- WGCNA_naive_READY %>%
dplyr::filter(xall_mod < 1) %>%
dplyr::filter(yall > 1) %>%
dplyr::select('Gene') # %>%
wgcna.frontloadprobes_mod        = wgcna.frontloaded_genes_mod$Gene
probes2annot_mod                 = match(wgcna.frontloadprobes_mod, annot$V1)
wgcna.frontloaded_mod_ANNOT      = data.frame(geneSymbol = annot$V1[probes2annot_mod],
Genes = annot$V7[probes2annot_mod])
View(wgcna.frontloaded_mod_ANNOT)
# plot the frontloaded genes formula using x axis for the severe treatment (second exposure, day 7)
P.wgcna.sev <- WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_sev, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio /n ex",
title = "Frontloaded genes") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
P.wgcna.sev
# plot the frontloaded genes formula using x axis for the moderate treatment (second exposure, day 7)
par(mfrow=c(2,1))
P.wgcna.mod <- WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_mod, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
# plot the frontloaded genes formula using x axis for the severe treatment (second exposure, day 7)
P.wgcna.sev <- WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_sev, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes; response to severe pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
P.wgcna.mod
P.wgcna.sev
par(mfrow=c(2,1))
P.wgcna.mod <- WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_mod, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
P.wgcna.mod
# plot the frontloaded genes formula using x axis for the severe treatment (second exposure, day 7)
P.wgcna.sev <- WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_sev, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes; response to severe pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
P.wgcna.sev
# plot the frontloaded genes formula using x axis for the moderate treatment (second exposure, day 7)
par(mfrow=c(1,2))
WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_mod, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
WGCNA_naive_READY %>% dplyr::filter(yall < 3) %>%
ggplot(aes(x=xall_sev, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes; response to severe pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
# call the genes in the fronloaded quadrant!
annot = read.delim2(file = "Seq_details/Panopea-generosa-genes-annotations.txt",header = F);
# MODERATE second treatment
wgcna.frontloaded_genes_mod <- WGCNA_naive_READY %>%
dplyr::filter(xall_mod < 1) %>%
dplyr::filter(yall > 1) %>%
dplyr::select('Gene') # %>%
wgcna.frontloadprobes_mod        = wgcna.frontloaded_genes_mod$Gene
probes2annot_mod                 = match(wgcna.frontloadprobes_mod, annot$V1)
wgcna.frontloaded_mod_ANNOT      = data.frame(geneSymbol = annot$V1[probes2annot_mod],
Genes = annot$V7[probes2annot_mod])
# SEVERE second treatment
wgcna.frontloaded_genes_sev <- WGCNA_naive_READY %>%
dplyr::filter(xall_sev < 1) %>%
dplyr::filter(yall > 1) %>%
dplyr::select('Gene') # %>%
wgcna.frontloadprobes_sev        = wgcna.frontloaded_genes_sev$Gene
probes2annot_sev                 = match(wgcna.frontloadprobes_sev, annot$V1)
wgcna.frontloaded_sev_ANNOT      = data.frame(geneSymbol = annot$V1[probes2annot_sev],
Genes = annot$V7[probes2annot_sev])
nrow(frontloaded_genesANNOT) # 13 putative frontloaded genes (DE analysis)
nrow(wgcna.frontloaded_genesANNOT) # 35  putative frontloaded genes (WGCNA modules)
# are the genes from DE analysis also present in the WGCNA set?
answer <- wgcna.frontloaded_genesANNOT %>%
dplyr::filter(geneSymbol %in% frontloaded_genesANNOT$geneSymbol)
answer # 5 of the 13 genes fromthe DE frontloaded are in the 70 genes from WGCNA frontloaded
head(wgcna.frontloaded_mod_ANNOT)
wgcna.frontloadprobes_sev        = wgcna.frontloaded_genes_sev$Gene
probes2annot_sev                 = match(wgcna.frontloadprobes_sev, annot$V1)
wgcna.frontloaded_sev_ANNOT      = data.frame(geneSymbol = annot$V1[probes2annot_sev],
Genes = annot$V7[probes2annot_sev])
answer_here <- wgcna.frontloaded_sev_ANNOT %>%
dplyr::filter(geneSymbol %in% wgcna.frontloaded_mod_ANNOT$geneSymbol)
nrow(answer_here)
nrow(wgcna.frontloaded_mod_ANNOT)
nrow(wgcna.frontloaded_sev_ANNOT)
nrow(answer_here)
nrow(wgcna.frontloaded_mod_ANNOT)
ModSev_frontloaded <- wgcna.frontloaded_sev_ANNOT %>%
dplyr::filter(geneSymbol %in% wgcna.frontloaded_mod_ANNOT$geneSymbol)
nrow(answer_here) # 35 genes in the sev. dataset with the same gene as the moderate
nrow(wgcna.frontloaded_mod_ANNOT) # 35 total in the moderate; ALL GENES IN RESPONSE TO EITHER MODERATE OR SEVERE (7 extra in the severe)
nrow(ModSev_frontloaded) # 35 genes in the sev. dataset with the same gene as the moderate
Sec_7extra_frontloaded <- wgcna.frontloaded_sev_ANNOT %>%
dplyr::filter(!geneSymbol %in% wgcna.frontloaded_mod_ANNOT$geneSymbol)
nrow(Sec_7extra_frontloaded) # 35 genes in the sev. dataset with the same gene as the moderate
View(Sec_7extra_frontloaded)
View(ModSev_frontloaded)
---
# title: "DESeq2_FrontloadingAnalysis.R"
# author: "Samuel Gurr"
# date: "January 8, 2021"
---
# LOAD PACKAGES
library(dplyr)
library(reshape2)
# SET WORKING DIRECTORY AND LOAD DATA
setwd("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
Day7AvMSecond_totalDEGs <- read.csv(file="Analysis/Output/DESeq2/10cpm/Day7/ Day7.SecondDEGs_AvM_DESeq2results.csv", sep=',', header=TRUE) %>% dplyr::select(!c('X','baseMean'))
Day7AvMSecond_totalDEGs
Day7AvMSecond_UP        <- Day7AvMSecond_totalDEGs %>%
dplyr::filter(padj < 0.05) %>%
dplyr::filter(log2FoldChange > 0) %>%
mutate(log2FoldChange = abs(log2FoldChange))
nrow(Day7AvMSecond_UP) # 92 total genes!
ncol(Day7AvMSecond_UP[7:ncol(Day7AvMSecond_UP)]) # 36 total samples!
nrow(Day7AvMSecond_UP) # 92 total genes!
ncol(Day7AvMSecond_UP[7:ncol(Day7AvMSecond_UP)]) # 36 total samples!
# Steps
# (2) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# we have out 92 genes in question! 'Day7AvMSecond_UP'
# now lets call in the experiment metadata to get the assigned treatment by the sample IDs!
Master.Exp.Metadata   <- read.csv(file="Analysis/Data/Experiment_Metadata/Master_Phyenotype.and.Exp.Treatment_Metadata.csv", sep=',', header=TRUE) %>%
dplyr::filter(Date %in% 20190731) %>% # call only day 7
dplyr::select(c('Sample.Name', 'All_Treatment')) %>% # select only the sample names and the treatment groups
dplyr::mutate(All_Treatment = factor(All_Treatment)) # make the treatment groups a factor
nrow(Master.Exp.Metadata) # 36 total samples!
Day7UP_melted     <- Day7AvMSecond_UP %>%
dplyr::select(!c('log2FoldChange', 'lfcSE','stat','pvalue','padj')) %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
Day7UP_TreatMerge <- merge(Day7UP_melted, Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
View(Day7UP_TreatMerge)
Day7UP_READY <- dcast(Day7UP_TreatMerge, Gene ~ All_Treatment)
# lets calculate it
xall_1 <- ( (Day7UP_READY$MM / Day7UP_READY$MA) / (Day7UP_READY$AM / Day7UP_READY$AA) ) # call MA as the control for the MM ratio
xall_2 <- ( (Day7UP_READY$MM / Day7UP_READY$AA) / (Day7UP_READY$AM / Day7UP_READY$AA) ) # call AA as the control for the MM ratio
xall_3 <- (Day7UP_READY$MM / Day7UP_READY$AM)  # call AA as the control for the MM ratio
Day7UP_READY$xall_1 <- xall_1
Day7UP_READY$xall_2 <- xall_2
Day7UP_READY$xall_3 <- xall_3
# lets calculate it
yall <- (Day7UP_READY$MA / Day7UP_READY$AA)
Day7UP_READY$yall <- yall
# Steps
# (4) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# lets plot it!
library(ggplot2)
P <- Day7UP_READY %>% #dplyr::filter(yall < 6) %>%
ggplot(aes(x=xall_1, y=yall)) +
geom_point() +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Frontloaded genes") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5,
alpha = .2) +
annotate("rect", xmin = 0, xmax = 1, ymin = 0, ymax = 1,
alpha = .5)
P
# call genes with x axis vaulue < 1
frontloaded_genes <- Day7UP_READY %>%
dplyr::filter(xall_1 < 1) %>%
dplyr::filter(yall > 1) %>%
dplyr::select('Gene') # %>%
# load the P generosa annotated genes file
annot           = read.delim2(file = "Seq_details/Panopea-generosa-genes-annotations.txt",header = F);
frontloadprobes = frontloaded_genes$Gene
probes2annot    = match(frontloadprobes, annot$V1)
frontloaded_genesANNOT = data.frame(geneSymbol = annot$V1[probes2annot],
Genes = annot$V7[probes2annot])
View(frontloaded_genesANNOT)
Day7AvMSecond_totalDEGs <- read.csv(file="Analysis/Output/DESeq2/10cpm/Day7/ Day7.SecondDEGs_AvM_DESeq2results.csv", sep=',', header=TRUE) %>% dplyr::select(!c('X','baseMean'))
Day7AvMSecond_UP        <- Day7AvMSecond_totalDEGs %>%
dplyr::filter(padj < 0.05) %>%
dplyr::filter(log2FoldChange < 0) %>%
mutate(log2FoldChange = abs(log2FoldChange))
nrow(Day7AvMSecond_UP) # 92 total genes!
ncol(Day7AvMSecond_UP[7:ncol(Day7AvMSecond_UP)]) # 36 total samples!
