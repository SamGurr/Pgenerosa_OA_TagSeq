geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Day 21
Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 4,
alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
ggarrange(P.wgcna.mod, RxnNorm_Day7_mod,
P.mod.carryover,RxnNorm_Day21_ModerateSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
P.mod.carryover <- Day7Mod_Day21_READY %>%
dplyr::mutate(frontloaded = ifelse(xall_mod < 1.0 & yall_mod > 1.0, "True", "False")) %>%
dplyr::mutate(frontloaded = replace_na(frontloaded, "False")) %>%
dplyr::select(c('xall_mod', 'yall_mod', "frontloaded")) %>%
#na.omit() %>%
dplyr::filter(xall_mod < 5) %>%
ggplot(aes(x=xall_mod, y=yall_mod)) +
geom_point(aes(color=frontloaded,shape=frontloaded), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
scale_x_continuous(expand = c(0, 0), limits = c(0,3.2)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,3)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Day 21
Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 3,
alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
pdf("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Frontloading/Preexposed_effect_module/Day7_Moderate_Day21_Frontloaded.pdf", width=12, height=10)
ggarrange(P.wgcna.mod, RxnNorm_Day7_mod,
P.mod.carryover,RxnNorm_Day21_ModerateSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
dev.off()
# plot the frontloaded genes formula using x axis for the moderate treatment (second exposure, day 7)
P.wgcna.mod <- Day7_Frontloaded[!is.na(Day7_Frontloaded$foldChangeRatioModerate),] %>%
dplyr::mutate(FrontMod_color = ifelse(foldChangeRatioModerate < 1.0 & ControlRatioModerate > 1.0, "True", "False")) %>%
dplyr::filter(ControlRatioModerate <5) %>%
ggplot(aes(x=foldChangeRatioModerate, y=ControlRatioModerate)) +
geom_point(aes(color=FrontMod_color,shape=FrontMod_color), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
scale_x_continuous(expand = c(0, 0), limits = c(0,1.6)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,4)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Day 7
Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 4,
alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
P.wgcna.mod
# plot the frontloaded genes formula using x axis for the moderate treatment (second exposure, day 7)
P.wgcna.mod <- Day7_Frontloaded[!is.na(Day7_Frontloaded$foldChangeRatioModerate),] %>%
dplyr::mutate(FrontMod_color = ifelse(foldChangeRatioModerate < 1.0 & ControlRatioModerate > 1.0, "True", "False")) %>%
dplyr::filter(ControlRatioModerate <5) %>%
ggplot(aes(x=foldChangeRatioModerate, y=ControlRatioModerate)) +
geom_point(aes(color=FrontMod_color,shape=FrontMod_color), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
scale_x_continuous(expand = c(0, 0), limits = c(0,1.7)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,4)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Day 7
Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 4,
alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
P.wgcna.mod
# plot the frontloaded genes formula using x axis for the moderate treatment (second exposure, day 7)
P.wgcna.mod <- Day7_Frontloaded[!is.na(Day7_Frontloaded$foldChangeRatioModerate),] %>%
dplyr::mutate(FrontMod_color = ifelse(foldChangeRatioModerate < 1.0 & ControlRatioModerate > 1.0, "True", "False")) %>%
dplyr::filter(ControlRatioModerate <5) %>%
ggplot(aes(x=foldChangeRatioModerate, y=ControlRatioModerate)) +
geom_point(aes(color=FrontMod_color,shape=FrontMod_color), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
scale_x_continuous(expand = c(0, 0), breaks=seq(0,1.7, 0.5)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,4)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Day 7
Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 4,
alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
P.wgcna.mod
# plot the frontloaded genes formula using x axis for the moderate treatment (second exposure, day 7)
P.wgcna.mod <- Day7_Frontloaded[!is.na(Day7_Frontloaded$foldChangeRatioModerate),] %>%
dplyr::mutate(FrontMod_color = ifelse(foldChangeRatioModerate < 1.0 & ControlRatioModerate > 1.0, "True", "False")) %>%
dplyr::filter(ControlRatioModerate <5) %>%
ggplot(aes(x=foldChangeRatioModerate, y=ControlRatioModerate)) +
geom_point(aes(color=FrontMod_color,shape=FrontMod_color), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
scale_x_continuous(expand = c(0, 0), breaks=seq(0,1.8, 0.5)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,4)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Day 7
Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 4,
alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
P.wgcna.mod
# plot the frontloaded genes formula using x axis for the moderate treatment (second exposure, day 7)
P.wgcna.mod <- Day7_Frontloaded[!is.na(Day7_Frontloaded$foldChangeRatioModerate),] %>%
dplyr::mutate(FrontMod_color = ifelse(foldChangeRatioModerate < 1.0 & ControlRatioModerate > 1.0, "True", "False")) %>%
dplyr::filter(ControlRatioModerate <5) %>%
ggplot(aes(x=foldChangeRatioModerate, y=ControlRatioModerate)) +
geom_point(aes(color=FrontMod_color,shape=FrontMod_color), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
scale_x_continuous(expand = c(0, 0), breaks=seq(0,2, 0.5)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,4)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio",
x = "Conditioned to naive foldchange ratio",
title = "Day 7
Frontloaded genes; response to moderate pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 4,
alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
P.wgcna.mod
RxnNorm_Day7_Sev
P.wgcna.sev
RxnNorm_Day7_Sev
P.sev.carryover # look at the plot
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
P.sev.carryover <- Day7Sev_Day21_READY %>%
dplyr::mutate(frontloaded = ifelse(xall_sev < 1.0 & yall_sev > 1.0, "True", "False")) %>%
dplyr::mutate(frontloaded = replace_na(frontloaded, "False")) %>%
dplyr::select(c('xall_sev', 'yall_sev', "frontloaded")) %>%
#na.omit() %>%
#dplyr::filter(xall_sev < 4) %>%
ggplot(aes(x=xall_sev, y=yall_sev)) +
geom_point(aes(color=frontloaded,shape=frontloaded), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
scale_x_continuous(expand = c(0, 0), limits = c(0,2)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1.5)) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio (MSA : ASA)",
x = "Conditioned to naive foldchange ratio [MSM:MSA] : [ASM:ASA]",
title = "Day 21 Carry-over of frontloaded genes; response to severe pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5, alpha = .2) +
theme(legend.position="none")
P.sev.carryover # look at the plot
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
P.sev.carryover <- Day7Sev_Day21_READY %>%
dplyr::mutate(frontloaded = ifelse(xall_sev < 1.0 & yall_sev > 1.0, "True", "False")) %>%
dplyr::mutate(frontloaded = replace_na(frontloaded, "False")) %>%
dplyr::select(c('xall_sev', 'yall_sev', "frontloaded")) %>%
#na.omit() %>%
#dplyr::filter(xall_sev < 4) %>%
ggplot(aes(x=xall_sev, y=yall_sev)) +
geom_point(aes(color=frontloaded,shape=frontloaded), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
scale_x_continuous(expand = c(0, 0), limits = c(0,2)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1.5)) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio (MSA : ASA)",
x = "Conditioned to naive foldchange ratio [MSM:MSA] : [ASM:ASA]",
title = "Day 21 Carry-over of frontloaded genes; response to severe pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5, alpha = .2) +
theme(legend.position="none", text = element_text(size=15)) +
P.sev.carryover # look at the plot
P.sev.carryover <- Day7Sev_Day21_READY %>%
dplyr::mutate(frontloaded = ifelse(xall_sev < 1.0 & yall_sev > 1.0, "True", "False")) %>%
dplyr::mutate(frontloaded = replace_na(frontloaded, "False")) %>%
dplyr::select(c('xall_sev', 'yall_sev', "frontloaded")) %>%
#na.omit() %>%
#dplyr::filter(xall_sev < 4) %>%
ggplot(aes(x=xall_sev, y=yall_sev)) +
geom_point(aes(color=frontloaded,shape=frontloaded), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
scale_x_continuous(expand = c(0, 0), limits = c(0,2)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1.5)) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio (MSA : ASA)",
x = "Conditioned to naive foldchange ratio [MSM:MSA] : [ASM:ASA]",
title = "Day 21 Carry-over of frontloaded genes; response to severe pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5, alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
P.sev.carryover # look at the plot
RxnNorm_Day21_SevereSecondary <- Day7Sev_Day21_Merge %>%
dplyr::filter(All_Treatment %in% c('ASA','ASM','MSA','MSM')) %>%
dplyr::mutate(PrimTreatment = substr(All_Treatment,1,1)) %>%
dplyr::mutate(SecTreatment = substr(All_Treatment, 2,2)) %>%
dplyr::mutate(ThirdTreatment = substr(All_Treatment, 3,3)) %>%
ggplot(aes(x=ThirdTreatment, y=meanExp, group=PrimTreatment, fill=PrimTreatment)) +
geom_line(aes(linetype = factor(PrimTreatment)), size = 0.5) +
geom_pointrange(aes(ymin=meanExp-se, ymax=meanExp+se, shape=PrimTreatment, fill=PrimTreatment),
position=position_dodge(0.05)) +
theme_classic() +
scale_shape_manual(values=c(1, 16))+
scale_fill_manual(values=c('black','white')) +
scale_linetype_manual(values = c("A" = "solid", "M" = "dashed"))  +
labs(y= "mean SE VST expression",
x = "Third pCO2 treatment",
title = "Day 21 response of frontloaded genes") +
theme(legend.position="none", text = element_text(size=15))
RxnNorm_Day21_SevereSecondary
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
P.sev.carryover <- Day7Sev_Day21_READY %>%
dplyr::mutate(frontloaded = ifelse(xall_sev < 1.0 & yall_sev > 1.0, "True", "False")) %>%
dplyr::mutate(frontloaded = replace_na(frontloaded, "False")) %>%
dplyr::select(c('xall_sev', 'yall_sev', "frontloaded")) %>%
#na.omit() %>%
#dplyr::filter(xall_sev < 4) %>%
ggplot(aes(x=xall_sev, y=yall_sev)) +
geom_point(aes(color=frontloaded,shape=frontloaded), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
scale_x_continuous(expand = c(0, 0), limits = c(0,2)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,4)) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio (MSA : ASA)",
x = "Conditioned to naive foldchange ratio [MSM:MSA] : [ASM:ASA]",
title = "Day 21 Carry-over of frontloaded genes; response to severe pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 1.5, alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
P.sev.carryover <- Day7Sev_Day21_READY %>%
dplyr::mutate(frontloaded = ifelse(xall_sev < 1.0 & yall_sev > 1.0, "True", "False")) %>%
dplyr::mutate(frontloaded = replace_na(frontloaded, "False")) %>%
dplyr::select(c('xall_sev', 'yall_sev', "frontloaded")) %>%
#na.omit() %>%
#dplyr::filter(xall_sev < 4) %>%
ggplot(aes(x=xall_sev, y=yall_sev)) +
geom_point(aes(color=frontloaded,shape=frontloaded), na.rm=TRUE) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
scale_x_continuous(expand = c(0, 0), limits = c(0,2)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,4)) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Conditioned to naive control ratio (MSA : ASA)",
x = "Conditioned to naive foldchange ratio [MSM:MSA] : [ASM:ASA]",
title = "Day 21 Carry-over of frontloaded genes; response to severe pCO2") +
expand_limits(x = 0, y = 0) +
annotate("rect", xmin = 0, xmax = 1, ymin = 1, ymax = 4, alpha = .2) +
theme(legend.position="none", text = element_text(size=15))
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
RxnNorm_Day21_SevereSecondary <- Day7Sev_Day21_Merge %>%
dplyr::filter(All_Treatment %in% c('ASA','ASM','MSA','MSM')) %>%
dplyr::mutate(PrimTreatment = substr(All_Treatment,1,1)) %>%
dplyr::mutate(SecTreatment = substr(All_Treatment, 2,2)) %>%
dplyr::mutate(ThirdTreatment = substr(All_Treatment, 3,3)) %>%
ggplot(aes(x=ThirdTreatment, y=meanExp, group=PrimTreatment, fill=PrimTreatment)) +
geom_line(aes(linetype = factor(PrimTreatment)), size = 0.5) +
geom_pointrange(aes(ymin=meanExp-se, ymax=meanExp+se, shape=PrimTreatment, fill=PrimTreatment),
position=position_dodge(0.05)) +
theme_classic() +
scale_shape_manual(values=c(1, 16))+
scale_fill_manual(values=c('black','white')) +
scale_linetype_manual(values = c("A" = "solid", "M" = "dashed"))  +
scale_y_continuous(limits = c(4.2,5.5)) +
labs(y= "mean SE VST expression",
x = "Third pCO2 treatment",
title = "Day 21 response of frontloaded genes") +
theme(legend.position="none", text = element_text(size=15))
# plot reaction norm
RxnNorm_Day7_Sev <- Day7Sev_Merge %>%
dplyr::filter(All_Treatment %in% c('AS','AA','MS','MA')) %>%
dplyr::mutate(PrimTreatment = substr(All_Treatment,1,1)) %>%
dplyr::mutate(SecTreatment = substr(All_Treatment, 2,2)) %>%
ggplot(aes(x=SecTreatment, y=meanExp, group=PrimTreatment, fill=PrimTreatment)) +
geom_line(aes(linetype = factor(PrimTreatment)), size = 0.5) +
geom_pointrange(aes(ymin=meanExp-se, ymax=meanExp+se, shape=PrimTreatment, fill=PrimTreatment),
position=position_dodge(0.05)) +
scale_shape_manual(values=c(1, 16))+
theme_classic() +
# scale_y_continuous(limits = c(3.9,4.7)) +
scale_fill_manual(values=c('black','white')) +
scale_linetype_manual(values = c("A" = "solid", "M" = "dashed"))  +
labs(y= "mean SE VST expression",
x = "Second pCO2 treatment",
title = "Day 7 severe pCO2 of frontloaded genes") +
theme(legend.position="none", text = element_text(size=15)) +
scale_y_continuous(limits = c(4.2,5.5)) +
annotate(geom="text", x=0.96, y=4.42, label="a", color="black",size=4) +
annotate(geom="text", x=0.98, y=5, label="c", color="black",size=4) +
annotate(geom="text", x=1.98, y=4.87, label="c", color="black",size=4) +
annotate(geom="text", x=1.96, y=4.6, label="b", color="black",size=4) +
annotate(geom="text", x = 1.5, y = 4.35, label=paste("N = ",Day7Sev_Merge$n[1]), size = 4)
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
RxnNorm_Day21_SevereSecondary <- Day7Sev_Day21_Merge %>%
dplyr::filter(All_Treatment %in% c('ASA','ASM','MSA','MSM')) %>%
dplyr::mutate(PrimTreatment = substr(All_Treatment,1,1)) %>%
dplyr::mutate(SecTreatment = substr(All_Treatment, 2,2)) %>%
dplyr::mutate(ThirdTreatment = substr(All_Treatment, 3,3)) %>%
ggplot(aes(x=ThirdTreatment, y=meanExp, group=PrimTreatment, fill=PrimTreatment)) +
geom_line(aes(linetype = factor(PrimTreatment)), size = 0.5) +
geom_pointrange(aes(ymin=meanExp-se, ymax=meanExp+se, shape=PrimTreatment, fill=PrimTreatment),
position=position_dodge(0.05)) +
theme_classic() +
scale_shape_manual(values=c(1, 16))+
scale_fill_manual(values=c('black','white')) +
scale_linetype_manual(values = c("A" = "solid", "M" = "dashed"))  +
scale_y_continuous(limits = c(4.2,5.5)) +
labs(y= "mean SE VST expression",
x = "Third pCO2 treatment",
title = "Day 21 response of frontloaded genes") +
theme(legend.position="none", text = element_text(size=15)) +
annotate(geom="text", x = 1.5, y = 4.4, label=paste("N = ",Day7Sev_Day21_Merge$n[1]), size = 4)
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
#setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
#setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data    <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc1hour.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt') # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
exp_metadata <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
lengths      <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T)
resp.ref     <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt')
(blanks_means)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
#setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
#setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data    <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc1hour.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt') # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
exp_metadata <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
lengths      <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T)
resp.ref     <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt')
# merge the exp_metadata with the resp.data
resp.ref_length_merged                 <- merge(resp.ref, lengths) # all TRUE allows us to keep the blanks
resp.data_merged                       <- merge(resp.data, resp.ref_length_merged) %>% # out master file moving forward....
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data")))
kable(head(resp.data_merged))
resp.data_merged[94,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[110,c(1:6)] #  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[95,c(1:6)]  # 	C1 RR_9.30.21_PM_Plate_1_Run_2.csv	0.011656487	0.011656487	0.011656487  - ommit this
resp.data_merged[94,4] <- resp.data_merged[94,5] # 20210930_Plate_2_Run_2_C5_regression - Lz and Leq call better regression than Lpc
resp.data_merged[110,4] <- resp.data_merged[110,5] # 20210930_Plate_2_Run_1_C1_regression - Lz and Leq call better regression than Lpc
resp.data_merged[95,4] <- -0.0296 # 20210930_Plate_1_Run_2_C1_regression - plot shows noise after the 20 minutes mark, we reran this at the end of the LoLin script, insert here!
resp.data_merged[94,c(1:6)]
resp.data_merged[110,c(1:6)]
resp.data_merged[95,c(1:6)]
blanks_total <- data.frame() # start dataframe
blanks.table <- data.frame(matrix(nrow = 1,ncol = 5)) # make a table template
colnames(blanks.table)<-c('Date', 'Channel', 'mean_Lpc', 'mean_Leq' , 'mean_Lz') # names for comuns in the for loop
blanks_all_raw <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data"))) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
dplyr::filter(Lpc <0) %>%
dplyr::filter(!Date == '9/30/2021' | !Lpc < -0.035) %>% #omits C6 RR_9.30.21_AM_Plate_1_Run_1.csv	8.0	blank - View the Lolin plot, looks noisy and a fast outlier from the others
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "2" )) # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
kable((blanks_all_raw)[,c(1:3,6,8,12:14)])
blanks_means <- blanks_all_raw %>%
dplyr::group_by(Date, pH, filetype) %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
kable(blanks_means)
# annotate these and output kable table
SevGenes_Frontloaded2                  <- Day7Sev_Day21_READY %>% dplyr::filter(xall_sev <1 & yall_sev > 1) %>% select(Gene)
probes2annot_SevGenes_Frontloaded      = match(SevGenes_Frontloaded2$Gene, annot$V1)
Frontloaded_Sev_Day21ANNOT             = data.frame(geneSymbol = annot$V1[probes2annot_SevGenes_Frontloaded],
Genes = annot$V7[probes2annot_SevGenes_Frontloaded])
kable(Frontloaded_Sev_Day21ANNOT)
kable(Frontloaded_Sev_Day21ANNOT)
write.csv(Frontloaded_Sev_Day21ANNOT,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Frontloading/Preexposed_effect_module/Day7_Severe_Day21_Frontloaded.csv"))
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
pdf("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Frontloading/Day7_Severe_Day21_Frontloaded.pdf", width=12, height=10)
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
dev.off()
pdf("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Frontloading/Preexposed_effect_module/Day7_Severe_Day21_Frontloaded.pdf", width=12, height=10)
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
dev.off()
pdf("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Frontloading/Preexposed_effect_module/Day7_Severe_Day21_Frontloaded.pdf", width=12, height=10)
ggarrange(P.wgcna.sev, RxnNorm_Day7_Sev,
P.sev.carryover,RxnNorm_Day21_SevereSecondary + rremove("x.text"),
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
dev.off()
