colMeans(meanMaster_10cpm)
colSdDiffs(meanMaster_10cpm)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
library(timeSeries)
colSdDiffs(meanMaster_10cpm)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
install.packages('matrixStats')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
library(matrixStats)
colSdDiffs(meanMaster_10cpm)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# Sum  read counts for 10 CPM 50% filtered data
d0sum  <- as.data.frame(colSums(d0_filt_10CPM))
rownames(d0sum)<-NULL
colnames(d0sum) <- "sum"
d7sum  <- as.data.frame(colSums(d7_filt_10CPM))
rownames(d7sum)<-NULL
colnames(d7sum) <- "sum"
d14sum <- as.data.frame(colSums(d14_filt_10CPM))
rownames(d14sum)<-NULL
colnames(d14sum) <- "sum"
d21sum <- as.data.frame(colSums(d21_filt_10CPM))
rownames(d21sum)<-NULL
colnames(d21sum) <- "sum"
sumMaster_10cpm <-rbind(d0sum, d7sum, d14sum, d21sum)
colMeans(sumMaster_10cpm)
colSdDiffs(sumMaster_10cpm)
d0sum
d7sum
sumMaster_10cpm
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
min(sumMaster_10cpm)
max(sumMaster_10cpm)
sumMaster_10cpm
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
View(sumMaster_10cpm)
# LOAD PACKAGES
library(dplyr)
library(reshape2)
library(ggplot2)
library(kableExtra)
library(knitr)
library(tidyverse)
# SET WORKING DIRECTORY AND LOAD DATA
setwd("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# LOAD DATA
annot = read.delim2(file = "Seq_details/Panopea-generosa-genes-annotations.txt",header = F) # annotation file P generosa
# WGCNA modules
day7.ModMem   <- read.csv(file="Analysis/Output/WGCNA/subseq_treatments_all/Day7/d7.WGCNA_ModulMembership.csv", sep=',', header=TRUE)   %>%  dplyr::rename(Pgen_ID = X) %>%  mutate(Pgen_ID = as.character(Pgen_ID)) %>%  dplyr::select(c('Pgen_ID','moduleColor'))
day14.ModMem  <- read.csv(file="Analysis/Output/WGCNA/subseq_treatments_all/Day14/d14.WGCNA_ModulMembership.csv", sep=',', header=TRUE)  %>%  dplyr::rename(Pgen_ID = X) %>%  mutate(Pgen_ID = as.character(Pgen_ID)) %>%  dplyr::select(c('Pgen_ID','moduleColor'))
day21.ModMem  <- read.csv(file="Analysis/Output/WGCNA/subseq_treatments_all/Day21/d21.WGCNA_ModulMembership.csv", sep=',', header=TRUE)  %>%  dplyr::rename(Pgen_ID = X) %>%  mutate(Pgen_ID = as.character(Pgen_ID)) %>%  dplyr::select(c('Pgen_ID','moduleColor'))
# expression read counts
# Day 7
Day7_exp_data <- read.csv(file="Analysis/Output/DESeq2/10cpm/Day7/ Day7.PrimaryDEGs_AvM__DESeq2results.csv", sep=',', header=TRUE) %>% dplyr::select(!c('X','baseMean','log2FoldChange','lfcSE','stat','pvalue','padj'))
# Day 14
Day14_exp_data <- read.csv(file="Analysis/Output/DESeq2/10cpm/Day14/ Day14.Primary_DESeq2results.csv", sep=',', header=TRUE) %>% dplyr::select(!c('X','baseMean','log2FoldChange','lfcSE','stat','pvalue','padj'))
# Day 21
Day21_exp_data <- read.csv(file="Analysis/Output/DESeq2/10cpm/Day21/ Day21.Primary_DESeq2results.csv", sep=',', header=TRUE) %>% dplyr::select(!c('X','baseMean','log2FoldChange','lfcSE','stat','pvalue','padj'))
# experiment metadata (treatments)
Day7_Master.Exp.Metadata   <- read.csv(file="Analysis/Data/Experiment_Metadata/Master_Phyenotype.and.Exp.Treatment_Metadata.csv", sep=',', header=TRUE) %>%
dplyr::filter(Date %in% 20190731) %>% # call only day 7
dplyr::select(c('Sample.Name', 'All_Treatment')) %>% # select only the sample names and the treatment groups
dplyr::mutate(All_Treatment = factor(All_Treatment)) # make the treatment groups a factor
Day14_Master.Exp.Metadata   <- read.csv(file="Analysis/Data/Experiment_Metadata/Master_Phyenotype.and.Exp.Treatment_Metadata.csv", sep=',', header=TRUE) %>%
dplyr::filter(Date %in% 20190807) %>% # call only day 7
dplyr::select(c('Sample.Name', 'All_Treatment')) %>% # select only the sample names and the treatment groups
dplyr::mutate(All_Treatment = factor(All_Treatment)) # make the treatment groups a factor
Day21_Master.Exp.Metadata   <- read.csv(file="Analysis/Data/Experiment_Metadata/Master_Phyenotype.and.Exp.Treatment_Metadata.csv", sep=',', header=TRUE) %>%
dplyr::filter(Date %in% 20190814) %>% # call only day 7
dplyr::select(c('Sample.Name', 'All_Treatment')) %>% # select only the sample names and the treatment groups
dplyr::mutate(All_Treatment = factor(All_Treatment)) # make the treatment groups a factor
day7.brown    <- day7.ModMem %>% dplyr::filter(moduleColor %in% 'brown')     %>% dplyr::mutate(day ='Day7')
day14.brown   <- day14.ModMem %>% dplyr::filter(moduleColor %in% 'brown')    %>% dplyr::mutate(day ='Day14')
day21.blue    <- day21.ModMem %>% dplyr::filter(moduleColor %in% 'blue')     %>% dplyr::mutate(day ='Day21')
day21.magenta <- day21.ModMem %>% dplyr::filter(moduleColor %in% 'magenta')  %>% dplyr::mutate(day ='Day21')
Naive_modules <- rbind(day7.brown, day14.brown, day21.blue, day21.magenta)
NaiveResponse_genes <- Naive_modules %>%
dplyr::group_by(Pgen_ID) %>%
dplyr::summarise(count = n()) %>%
dplyr::filter(count == 3)
# View(NaiveResponse_genes)
NaiveResponse_genes        = NaiveResponse_genes$Pgen_ID
NaiveResponse_genes_ANNOT  = match(NaiveResponse_genes, annot$V1)
NaiveResponse_genes_data   <- data.frame(geneSymbol = annot$V1[NaiveResponse_genes_ANNOT],
Annotation = annot$V7[NaiveResponse_genes_ANNOT])
# nrow(NaiveResponse_genes_data) # 315 genes present on all sampling days
# Day 21 gene expression
day21.blue_magenta <- rbind(day21.blue, day21.magenta)
Day_WGCNA_genes <- Day21_exp_data %>%
dplyr::filter(Gene %in% day21.blue_magenta$Pgen_ID) # call all genes in the module
#dplyr::filter(Gene %in% NaiveResponse_genes)
Day21_WGCNA_genes_melted     <- Day_WGCNA_genes %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
Day21_WGCNA_genes_Merge <- merge(Day21_WGCNA_genes_melted, Day21_Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
Day21_WGCNA_genes_Merge <- merge(Day21_WGCNA_genes_melted, Day21_Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
Day21_READY <- dcast(Day21_WGCNA_genes_Merge, Gene ~ All_Treatment)
Day21_READY <- dcast(Day21_WGCNA_genes_Merge, Gene ~ All_Treatment)
for (i in 1:nrow(Day21_READY)) {
# Moderate - higher expression AM > AA
if (Day21_READY$AAM[i] > Day21_READY$AAA[i]) {
Day21_READY$wgcna.xall_mod[i] <- ( (Day21_READY$MAM[i] / Day21_READY$MAA[i]) / (Day21_READY$AAM[i] / Day21_READY$AAA[i]) ) # call MA as the control for MM ratio
Day21_READY$wgcna.yall_mod[i] <- (Day21_READY$MAA[i] / Day21_READY$AAA[i]) # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day21_READY$wgcna.xall_mod[i] <- NA  # X axis  - call NA
Day21_READY$wgcna.yall_mod[i] <- NA # Y Axis  - call NA
}
}
x = data.frame(Gene = annot$V1[(match(Day21_READY$Gene, annot$V1))],
Gene_Description = annot$V7[(match(Day21_READY$Gene, annot$V1))])
Day21_Frontload   <- merge(x, Day21_READY, by = 'Gene')
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplye::mutate(ifelse(ControlRatio > 1 | foldChangeRatio < 1 ), "frontloaded", NA)
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplyr::mutate(ifelse(ControlRatio > 1 | foldChangeRatio < 1 ), "frontloaded", NA)
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplyr::mutate(ifelse(ControlRatio > 1 | foldChangeRatio < 1 ), frontloaded, NA)
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplyr::mutate(ifelse(ControlRatio > 1 | foldChangeRatio < 1 ), 2, NA)
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplyr::mutate(ifelse(ControlRatio > 1 | foldChangeRatio < 1 ), "frontloaded", "Not frontloaded")
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplyr::mutate(ifelse(ControlRatio > 1),  ifelse(foldChangeRatio < 1 ), "frontloaded", "Not frontloaded")
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplyr::mutate(ifelse(ControlRatio > 1 | foldChangeRatio < 1, "frontloaded", "Not frontloaded"))
Day21_Frontload_2
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatio > 1 | foldChangeRatio < 1, "frontloaded", "Not frontloaded"))
Day21_Frontload_2
write.csv(Day21_Frontload_2,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Day21_FrontloadedGenes.csv"))
# Day 14 gene expression
Day_WGCNA_genes <- Day14_exp_data %>%
dplyr::filter(Gene %in% day14.brown$Pgen_ID ) # call all genes in the module
# dplyr::filter(Gene %in% NaiveResponse_genes)
Day14_WGCNA_genes_melted     <- Day_WGCNA_genes %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
Day14_WGCNA_genes_Merge <- merge(Day14_WGCNA_genes_melted, Day14_Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
Day14_READY <- dcast(Day14_WGCNA_genes_Merge, Gene ~ All_Treatment)
for (i in 1:nrow(Day14_READY)) {
# Moderate - higher expression AM > AA
if (Day14_READY$AM[i] > Day14_READY$AA[i]) {
Day14_READY$wgcna.xall_mod[i] <- ( (Day14_READY$MM[i] / Day14_READY$MA[i]) / (Day14_READY$AM[i] / Day14_READY$AA[i]) ) # call MA as the control for MM ratio
Day14_READY$wgcna.yall_mod[i] <- (Day14_READY$MA[i] / Day14_READY$AA[i]) # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day14_READY$wgcna.xall_mod[i] <- NA  # X axis  - call NA
Day14_READY$wgcna.yall_mod[i] <- NA # Y Axis  - call NA
}
# Severe - higher expression AS > AA
if (Day14_READY$AS[i] > Day14_READY$AA[i]) {
Day14_READY$wgcna.xall_sev[i] <- ( (Day14_READY$MS[i] / Day14_READY$MA[i]) / (Day14_READY$AS[i] / Day14_READY$AA[i]) ) # call AA as the control for MM ratio
Day14_READY$wgcna.yall_sev[i] <- (Day14_READY$MA[i] / Day14_READY$AA[i])            # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day14_READY$wgcna.xall_sev[i] <- NA  # X axis  - call NA
Day14_READY$wgcna.yall_sev[i] <- NA # Y Axis  - call NA
}
}
# Day14_READY
x = data.frame(Gene = annot$V1[(match(Day14_READY$Gene, annot$V1))],
Gene_Description = annot$V7[(match(Day14_READY$Gene, annot$V1))])
Day14_Frontload   <- merge(x, Day14_READY, by = 'Gene')
Day14_Frontload_2 <- Day14_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AA) %>%
dplyr::mutate(baseMeanPRIMED_control = MA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AM) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MM) / (MA)) ) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeSevere = ((AS) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeSevere = ((MS) / (MA)) ) %>%
dplyr::rename(ControlRatioModerate = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatioModerate = wgcna.xall_mod) %>%
dplyr::rename(ControlRatioSevere = wgcna.yall_sev) %>%
dplyr::rename(foldChangeRatioSevere = wgcna.xall_sev) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatio > 1 | foldChangeRatio < 1, "frontloaded", "Not frontloaded"))
Day14_Frontload_2 <- Day14_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AA) %>%
dplyr::mutate(baseMeanPRIMED_control = MA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AM) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MM) / (MA)) ) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeSevere = ((AS) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeSevere = ((MS) / (MA)) ) %>%
dplyr::rename(ControlRatioModerate = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatioModerate = wgcna.xall_mod) %>%
dplyr::rename(ControlRatioSevere = wgcna.yall_sev) %>%
dplyr::rename(foldChangeRatioSevere = wgcna.xall_sev) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatioModerate > 1 | foldChangeRatioModerate < 1, "frontloaded", "Not frontloaded"))
write.csv(Day14_Frontload_2,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Day14_FrontloadedGenes.csv"))
# Day 7 gene expression
Day_WGCNA_genes <- Day7_exp_data %>%
dplyr::filter(Gene %in% day7.brown$Pgen_ID ) # call all genes in the module
Day7_WGCNA_genes_melted     <- Day_WGCNA_genes %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
Day7_WGCNA_genes_Merge <- merge(Day7_WGCNA_genes_melted, Day7_Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
Day7_READY <- dcast(Day7_WGCNA_genes_Merge, Gene ~ All_Treatment)
for (i in 1:nrow(Day7_READY)) {
# Moderate - higher expression AM > AA
if (Day7_READY$AM[i] > Day7_READY$AA[i]) {
Day7_READY$wgcna.xall_mod[i] <- ( (Day7_READY$MM[i] / Day7_READY$MA[i]) / (Day7_READY$AM[i] / Day7_READY$AA[i]) ) # call MA as the control for MM ratio
Day7_READY$wgcna.yall_mod[i] <- (Day7_READY$MA[i] / Day7_READY$AA[i]) # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day7_READY$wgcna.xall_mod[i] <- NA  # X axis  - call NA
Day7_READY$wgcna.yall_mod[i] <- NA # Y Axis  - call NA
}
# Severe - higher expression AS > AA
if (Day7_READY$AS[i] > Day7_READY$AA[i]) {
Day7_READY$wgcna.xall_sev[i] <- ( (Day7_READY$MS[i] / Day7_READY$MA[i]) / (Day7_READY$AS[i] / Day7_READY$AA[i]) ) # call AA as the control for MM ratio
Day7_READY$wgcna.yall_sev[i] <- (Day7_READY$MA[i] / Day7_READY$AA[i])            # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day7_READY$wgcna.xall_sev[i] <- NA  # X axis  - call NA
Day7_READY$wgcna.yall_sev[i] <- NA # Y Axis  - call NA
}
}
# Day7_READY
x = data.frame(Gene = annot$V1[(match(Day7_READY$Gene, annot$V1))],
Gene_Description = annot$V7[(match(Day7_READY$Gene, annot$V1))])
Day7_Frontload   <- merge(x, Day7_READY, by = 'Gene')
Day7_Frontload_2 <- Day7_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AA) %>%
dplyr::mutate(baseMeanPRIMED_control = MA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AM) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MM) / (MA)) ) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeSevere = ((AS) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeSevere = ((MS) / (MA)) ) %>%
dplyr::rename(ControlRatioModerate = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatioModerate = wgcna.xall_mod) %>%
dplyr::rename(ControlRatioSevere = wgcna.yall_sev) %>%
dplyr::rename(foldChangeRatioSevere = wgcna.xall_sev) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatioModerate > 1 | foldChangeRatioModerate < 1, "frontloaded", "Not frontloaded"))
write.csv(Day7_Frontload_2,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Day7_FrontloadedGenes.csv"))
# LOAD PACKAGES
library(dplyr)
library(reshape2)
library(ggplot2)
library(kableExtra)
library(knitr)
library(tidyverse)
# SET WORKING DIRECTORY AND LOAD DATA
setwd("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/")
# LOAD DATA
annot = read.delim2(file = "Seq_details/Panopea-generosa-genes-annotations.txt",header = F) # annotation file P generosa
# WGCNA modules
day7.ModMem   <- read.csv(file="Analysis/Output/WGCNA/subseq_treatments_all/Day7/d7.WGCNA_ModulMembership.csv", sep=',', header=TRUE)   %>%  dplyr::rename(Pgen_ID = X) %>%  mutate(Pgen_ID = as.character(Pgen_ID)) %>%  dplyr::select(c('Pgen_ID','moduleColor'))
day14.ModMem  <- read.csv(file="Analysis/Output/WGCNA/subseq_treatments_all/Day14/d14.WGCNA_ModulMembership.csv", sep=',', header=TRUE)  %>%  dplyr::rename(Pgen_ID = X) %>%  mutate(Pgen_ID = as.character(Pgen_ID)) %>%  dplyr::select(c('Pgen_ID','moduleColor'))
day21.ModMem  <- read.csv(file="Analysis/Output/WGCNA/subseq_treatments_all/Day21/d21.WGCNA_ModulMembership.csv", sep=',', header=TRUE)  %>%  dplyr::rename(Pgen_ID = X) %>%  mutate(Pgen_ID = as.character(Pgen_ID)) %>%  dplyr::select(c('Pgen_ID','moduleColor'))
# expression read counts
# Day 7
Day7_exp_data <- read.csv(file="Analysis/Output/DESeq2/10cpm/Day7/ Day7.PrimaryDEGs_AvM__DESeq2results.csv", sep=',', header=TRUE) %>% dplyr::select(!c('X','baseMean','log2FoldChange','lfcSE','stat','pvalue','padj'))
# Day 14
Day14_exp_data <- read.csv(file="Analysis/Output/DESeq2/10cpm/Day14/ Day14.Primary_DESeq2results.csv", sep=',', header=TRUE) %>% dplyr::select(!c('X','baseMean','log2FoldChange','lfcSE','stat','pvalue','padj'))
# Day 21
Day21_exp_data <- read.csv(file="Analysis/Output/DESeq2/10cpm/Day21/ Day21.Primary_DESeq2results.csv", sep=',', header=TRUE) %>% dplyr::select(!c('X','baseMean','log2FoldChange','lfcSE','stat','pvalue','padj'))
# experiment metadata (treatments)
Day7_Master.Exp.Metadata   <- read.csv(file="Analysis/Data/Experiment_Metadata/Master_Phyenotype.and.Exp.Treatment_Metadata.csv", sep=',', header=TRUE) %>%
dplyr::filter(Date %in% 20190731) %>% # call only day 7
dplyr::select(c('Sample.Name', 'All_Treatment')) %>% # select only the sample names and the treatment groups
dplyr::mutate(All_Treatment = factor(All_Treatment)) # make the treatment groups a factor
Day14_Master.Exp.Metadata   <- read.csv(file="Analysis/Data/Experiment_Metadata/Master_Phyenotype.and.Exp.Treatment_Metadata.csv", sep=',', header=TRUE) %>%
dplyr::filter(Date %in% 20190807) %>% # call only day 7
dplyr::select(c('Sample.Name', 'All_Treatment')) %>% # select only the sample names and the treatment groups
dplyr::mutate(All_Treatment = factor(All_Treatment)) # make the treatment groups a factor
Day21_Master.Exp.Metadata   <- read.csv(file="Analysis/Data/Experiment_Metadata/Master_Phyenotype.and.Exp.Treatment_Metadata.csv", sep=',', header=TRUE) %>%
dplyr::filter(Date %in% 20190814) %>% # call only day 7
dplyr::select(c('Sample.Name', 'All_Treatment')) %>% # select only the sample names and the treatment groups
dplyr::mutate(All_Treatment = factor(All_Treatment)) # make the treatment groups a factor
day7.brown    <- day7.ModMem %>% dplyr::filter(moduleColor %in% 'brown')     %>% dplyr::mutate(day ='Day7')
day14.brown   <- day14.ModMem %>% dplyr::filter(moduleColor %in% 'brown')    %>% dplyr::mutate(day ='Day14')
day21.blue    <- day21.ModMem %>% dplyr::filter(moduleColor %in% 'blue')     %>% dplyr::mutate(day ='Day21')
day21.magenta <- day21.ModMem %>% dplyr::filter(moduleColor %in% 'magenta')  %>% dplyr::mutate(day ='Day21')
Naive_modules <- rbind(day7.brown, day14.brown, day21.blue, day21.magenta)
NaiveResponse_genes <- Naive_modules %>%
dplyr::group_by(Pgen_ID) %>%
dplyr::summarise(count = n()) %>%
dplyr::filter(count == 3)
# View(NaiveResponse_genes)
NaiveResponse_genes        = NaiveResponse_genes$Pgen_ID
NaiveResponse_genes_ANNOT  = match(NaiveResponse_genes, annot$V1)
NaiveResponse_genes_data   <- data.frame(geneSymbol = annot$V1[NaiveResponse_genes_ANNOT],
Annotation = annot$V7[NaiveResponse_genes_ANNOT])
# nrow(NaiveResponse_genes_data) # 315 genes present on all sampling days
ay 7 gene expression
Day_WGCNA_genes <- Day7_exp_data %>%
dplyr::filter(Gene %in% day7.brown$Pgen_ID ) # call all genes in the module
#dplyr::filter(Gene %in% NaiveResponse_genes)
Day7_WGCNA_genes_melted     <- Day_WGCNA_genes %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
Day7_WGCNA_genes_Merge <- merge(Day7_WGCNA_genes_melted, Day7_Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
Day7_READY <- dcast(Day7_WGCNA_genes_Merge, Gene ~ All_Treatment)
for (i in 1:nrow(Day7_READY)) {
# Moderate - higher expression AM > AA
if (Day7_READY$AM[i] > Day7_READY$AA[i]) {
Day7_READY$wgcna.xall_mod[i] <- ( (Day7_READY$MM[i] / Day7_READY$MA[i]) / (Day7_READY$AM[i] / Day7_READY$AA[i]) ) # call MA as the control for MM ratio
Day7_READY$wgcna.yall_mod[i] <- (Day7_READY$MA[i] / Day7_READY$AA[i]) # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day7_READY$wgcna.xall_mod[i] <- NA  # X axis  - call NA
Day7_READY$wgcna.yall_mod[i] <- NA # Y Axis  - call NA
}
# Severe - higher expression AS > AA
if (Day7_READY$AS[i] > Day7_READY$AA[i]) {
Day7_READY$wgcna.xall_sev[i] <- ( (Day7_READY$MS[i] / Day7_READY$MA[i]) / (Day7_READY$AS[i] / Day7_READY$AA[i]) ) # call AA as the control for MM ratio
Day7_READY$wgcna.yall_sev[i] <- (Day7_READY$MA[i] / Day7_READY$AA[i])            # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day7_READY$wgcna.xall_sev[i] <- NA  # X axis  - call NA
Day7_READY$wgcna.yall_sev[i] <- NA # Y Axis  - call NA
}
}
# Day7_READY
x = data.frame(Gene = annot$V1[(match(Day7_READY$Gene, annot$V1))],
Gene_Description = annot$V7[(match(Day7_READY$Gene, annot$V1))])
Day7_Frontload   <- merge(x, Day7_READY, by = 'Gene')
Day7_Frontload_2 <- Day7_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AA) %>%
dplyr::mutate(baseMeanPRIMED_control = MA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AM) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MM) / (MA)) ) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeSevere = ((AS) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeSevere = ((MS) / (MA)) ) %>%
dplyr::rename(ControlRatioModerate = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatioModerate = wgcna.xall_mod) %>%
dplyr::rename(ControlRatioSevere = wgcna.yall_sev) %>%
dplyr::rename(foldChangeRatioSevere = wgcna.xall_sev) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatioModerate > 1.00 | foldChangeRatioModerate < 1.00, "frontloaded", "Not frontloaded"))
write.csv(Day7_Frontload_2,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Day7_FrontloadedGenes.csv"))
Day7_Frontload_2 <- Day7_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AA) %>%
dplyr::mutate(baseMeanPRIMED_control = MA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AM) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MM) / (MA)) ) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeSevere = ((AS) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeSevere = ((MS) / (MA)) ) %>%
dplyr::rename(ControlRatioModerate = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatioModerate = wgcna.xall_mod) %>%
dplyr::rename(ControlRatioSevere = wgcna.yall_sev) %>%
dplyr::rename(foldChangeRatioSevere = wgcna.xall_sev) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatioModerate > 1.00 & foldChangeRatioModerate < 1.00, "frontloaded", "Not frontloaded"))
Day7_Frontload_2 <- Day7_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AA) %>%
dplyr::mutate(baseMeanPRIMED_control = MA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AM) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MM) / (MA)) ) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeSevere = ((AS) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeSevere = ((MS) / (MA)) ) %>%
dplyr::rename(ControlRatioModerate = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatioModerate = wgcna.xall_mod) %>%
dplyr::rename(ControlRatioSevere = wgcna.yall_sev) %>%
dplyr::rename(foldChangeRatioSevere = wgcna.xall_sev) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatioModerate > 1.00 & foldChangeRatioModerate < 1.00, "frontloaded", "Not frontloaded"))
write.csv(Day7_Frontload_2,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Day7_FrontloadedGenes.csv"))
Day7_Frontload_2 <- Day7_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AA) %>%
dplyr::mutate(baseMeanPRIMED_control = MA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AM) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MM) / (MA)) ) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeSevere = ((AS) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeSevere = ((MS) / (MA)) ) %>%
dplyr::rename(ControlRatioModerate = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatioModerate = wgcna.xall_mod) %>%
dplyr::rename(ControlRatioSevere = wgcna.yall_sev) %>%
dplyr::rename(foldChangeRatioSevere = wgcna.xall_sev) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatioModerate > 1.00 & foldChangeRatioModerate < 1.00, "frontloaded", "Not frontloaded"))
write.csv(Day7_Frontload_2,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Day7_FrontloadedGenes.csv"))
View(Day7_Frontload_2)
# Day 14 gene expression
Day_WGCNA_genes <- Day14_exp_data %>%
dplyr::filter(Gene %in% day14.brown$Pgen_ID ) # call all genes in the module
# dplyr::filter(Gene %in% NaiveResponse_genes)
Day14_WGCNA_genes_melted     <- Day_WGCNA_genes %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
Day14_WGCNA_genes_Merge <- merge(Day14_WGCNA_genes_melted, Day14_Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
Day14_READY <- dcast(Day14_WGCNA_genes_Merge, Gene ~ All_Treatment)
for (i in 1:nrow(Day14_READY)) {
# Moderate - higher expression AM > AA
if (Day14_READY$AM[i] > Day14_READY$AA[i]) {
Day14_READY$wgcna.xall_mod[i] <- ( (Day14_READY$MM[i] / Day14_READY$MA[i]) / (Day14_READY$AM[i] / Day14_READY$AA[i]) ) # call MA as the control for MM ratio
Day14_READY$wgcna.yall_mod[i] <- (Day14_READY$MA[i] / Day14_READY$AA[i]) # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day14_READY$wgcna.xall_mod[i] <- NA  # X axis  - call NA
Day14_READY$wgcna.yall_mod[i] <- NA # Y Axis  - call NA
}
# Severe - higher expression AS > AA
if (Day14_READY$AS[i] > Day14_READY$AA[i]) {
Day14_READY$wgcna.xall_sev[i] <- ( (Day14_READY$MS[i] / Day14_READY$MA[i]) / (Day14_READY$AS[i] / Day14_READY$AA[i]) ) # call AA as the control for MM ratio
Day14_READY$wgcna.yall_sev[i] <- (Day14_READY$MA[i] / Day14_READY$AA[i])            # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day14_READY$wgcna.xall_sev[i] <- NA  # X axis  - call NA
Day14_READY$wgcna.yall_sev[i] <- NA # Y Axis  - call NA
}
}
# Day14_READY
x = data.frame(Gene = annot$V1[(match(Day14_READY$Gene, annot$V1))],
Gene_Description = annot$V7[(match(Day14_READY$Gene, annot$V1))])
Day14_Frontload   <- merge(x, Day14_READY, by = 'Gene')
Day14_Frontload   <- merge(x, Day14_READY, by = 'Gene')
Day14_Frontload_2 <- Day14_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AA) %>%
dplyr::mutate(baseMeanPRIMED_control = MA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AM) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MM) / (MA)) ) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeSevere = ((AS) / (AA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeSevere = ((MS) / (MA)) ) %>%
dplyr::rename(ControlRatioModerate = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatioModerate = wgcna.xall_mod) %>%
dplyr::rename(ControlRatioSevere = wgcna.yall_sev) %>%
dplyr::rename(foldChangeRatioSevere = wgcna.xall_sev) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatioModerate > 1.00 & foldChangeRatioModerate < 1.00, "frontloaded", "Not frontloaded"))
write.csv(Day14_Frontload_2,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Day14_FrontloadedGenes.csv"))
# Day 21 gene expression
day21.blue_magenta <- rbind(day21.blue, day21.magenta)
Day_WGCNA_genes <- Day21_exp_data %>%
dplyr::filter(Gene %in% day21.blue_magenta$Pgen_ID) # call all genes in the module
#dplyr::filter(Gene %in% NaiveResponse_genes)
Day21_WGCNA_genes_melted     <- Day_WGCNA_genes %>%
reshape2::melt(id.var = 'Gene') %>%
dplyr::rename(Sample.Name = variable)
Day21_WGCNA_genes_Merge <- merge(Day21_WGCNA_genes_melted, Day21_Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
Day21_WGCNA_genes_Merge <- merge(Day21_WGCNA_genes_melted, Day21_Master.Exp.Metadata, by = 'Sample.Name') %>%
dplyr::group_by(Gene, All_Treatment) %>%
dplyr::select(!'Sample.Name') %>%
dplyr::summarise(meanExp = mean(value))
Day21_READY <- dcast(Day21_WGCNA_genes_Merge, Gene ~ All_Treatment)
for (i in 1:nrow(Day21_READY)) {
# Moderate - higher expression AM > AA
if (Day21_READY$AAM[i] > Day21_READY$AAA[i]) {
Day21_READY$wgcna.xall_mod[i] <- ( (Day21_READY$MAM[i] / Day21_READY$MAA[i]) / (Day21_READY$AAM[i] / Day21_READY$AAA[i]) ) # call MA as the control for MM ratio
Day21_READY$wgcna.yall_mod[i] <- (Day21_READY$MAA[i] / Day21_READY$AAA[i]) # Y Axis - this is simply the conditioned control over the naive control ( MA / AA )
} else {
Day21_READY$wgcna.xall_mod[i] <- NA  # X axis  - call NA
Day21_READY$wgcna.yall_mod[i] <- NA # Y Axis  - call NA
}
}
x = data.frame(Gene = annot$V1[(match(Day21_READY$Gene, annot$V1))],
Gene_Description = annot$V7[(match(Day21_READY$Gene, annot$V1))])
Day21_Frontload   <- merge(x, Day21_READY, by = 'Gene')
Day21_Frontload_2 <- Day21_Frontload %>%
dplyr::mutate(baseMeanNAIVE_control = AAA) %>%
dplyr::mutate(baseMeanPRIMED_control = MAA) %>%
dplyr::mutate(baseMeanNAIVE_foldChangeModerate = ((AAM) / (AAA))  ) %>%
dplyr::mutate(baseMeanPRIMED_foldChangeModerate = ((MAM) / (MAA)) ) %>%
dplyr::rename(ControlRatio = wgcna.yall_mod) %>%
dplyr::rename(foldChangeRatio = wgcna.xall_mod) %>%
dplyr::mutate(Frontloaded = ifelse(ControlRatio > 1.00 & foldChangeRatio < 1.00, "frontloaded", "Not frontloaded"))
write.csv(Day21_Frontload_2,paste("C:/Users/samjg/Documents/Github_repositories/Pgenerosa_TagSeq_Metabolomics/TagSeq/Analysis/Output/WGCNA/subseq_treatments_all/Day21_FrontloadedGenes.csv"))
